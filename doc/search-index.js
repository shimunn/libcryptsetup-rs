var searchIndex={};
searchIndex["libcryptsetup_rs"] = {"doc":"This is a wrapper library for libcryptsetup. The intension…","i":[[4,"Either","libcryptsetup_rs","The enum `Either` with variants `Left` and `Right` is a…",null,null],[13,"Left","","A value of type `L`.",0,null],[13,"Right","","A value of type `R`.",0,null],[6,"c_int","","Re-exports `libc` types in API",null,null],[6,"c_uint","","Re-exports `libc` types in API",null,null],[6,"size_t","","Re-exports `libc` types in API",null,null],[3,"CryptActivateFlags","","Enum wrapping `CRYPT_ACTIVATE_*` flags",null,null],[3,"CryptActivation","","Handle for activation options",null,null],[3,"CryptDeactivateFlags","","Set of flags for crypt deactivate operations",null,null],[3,"CryptBackup","","Handle for backup operations on a device",null,null],[3,"CryptContext","","Cryptographic context for device",null,null],[3,"CryptDebug","","Handle for backup operations on a device",null,null],[3,"CryptDevice","","Data type that is a handle for a crypt device",null,null],[3,"CryptInit","","Initialization handle for devices",null,null],[3,"CryptFormat","","Handle for format operations on a device",null,null],[3,"CryptParamsIntegrity","","Parameters for integrity checking",null,null],[12,"journal_size","","",1,null],[12,"journal_watermark","","",1,null],[12,"journal_commit_time","","",1,null],[12,"interleave_sectors","","",1,null],[12,"tag_size","","",1,null],[12,"sector_size","","",1,null],[12,"buffer_sectors","","",1,null],[12,"integrity","","",1,null],[12,"integrity_key_size","","",1,null],[12,"journal_integrity","","",1,null],[12,"journal_integrity_key","","",1,null],[12,"journal_crypt","","",1,null],[12,"journal_crypt_key","","",1,null],[3,"CryptParamsIntegrityRef","","A struct representing a reference with a lifetime to a…",null,null],[12,"inner","","",2,null],[3,"CryptParamsLuks2","","LUKS2-specific parameters",null,null],[12,"pbkdf","","",3,null],[12,"integrity","","",3,null],[12,"integrity_params","","",3,null],[12,"data_alignment","","",3,null],[12,"data_device","","",3,null],[12,"sector_size","","",3,null],[12,"label","","",3,null],[12,"subsystem","","",3,null],[3,"CryptParamsLuks2Ref","","A struct representing a reference with a lifetime to a…",null,null],[12,"inner","","",4,null],[3,"CryptParamsVerity","","Parameters specific to Verity",null,null],[12,"hash_name","","",5,null],[12,"data_device","","",5,null],[12,"hash_device","","",5,null],[12,"fec_device","","",5,null],[12,"salt","","",5,null],[12,"hash_type","","",5,null],[12,"data_block_size","","",5,null],[12,"hash_block_size","","",5,null],[12,"data_size","","",5,null],[12,"hash_area_offset","","",5,null],[12,"fec_area_offset","","",5,null],[12,"fec_roots","","",5,null],[12,"flags","","",5,null],[3,"CryptVerityFlags","","Set of flags for Verity format",null,null],[3,"CryptVolumeKey","","Handle for volume key operations",null,null],[3,"CryptKeyfile","","Handle for keyfile operations",null,null],[3,"CryptKeyfileContents","","Contents of a keyfile that have been read",null,null],[3,"CryptKeyfileFlags","","Set of flags for reading keyfiles",null,null],[3,"CryptKeyslot","","Handle for keyslot operations",null,null],[3,"CryptVolumeKeyFlags","","Set of volume key flags",null,null],[3,"CryptLog","","Handle for logging operations",null,null],[3,"CryptLuks2Flags","","Handle for LUKS2 persistent flag operations",null,null],[3,"CryptRequirementFlags","","Set of `CryptRequirementFlag`s",null,null],[3,"CryptLuks2Reencrypt","","Handle for reencryption operations",null,null],[3,"CryptParamsReencrypt","","Parameters for reencryption operations",null,null],[12,"mode","","Type of reencryption operation",6,null],[12,"direction","","Start at beginning or end of disk",6,null],[12,"resilience","","",6,null],[12,"hash","","",6,null],[12,"data_shift","","",6,null],[12,"max_hotzone_size","","",6,null],[12,"device_size","","Size of the device",6,null],[12,"luks2","","LUKS2-specific parameters",6,null],[12,"flags","","Reencryption flags",6,null],[3,"CryptParamsReencryptRef","","A struct representing a reference with a lifetime to a…",null,null],[12,"inner","","",7,null],[3,"CryptReencryptFlags","","Wrapper for a set of CryptReencryptFlag",null,null],[3,"CryptLuks2Token","","Handle for LUKS2 token operations",null,null],[3,"SafeMemHandle","","Handle to allocated memory from libcryptsetup",null,null],[3,"SafeBorrowedMemZero","","Handle for zeroing borrowed memory. \"Borrowed\" in this…",null,null],[3,"SafeOwnedMemZero","","Handle for zeroing owned memory. \"Owned\" in this context…",null,null],[3,"ActiveDevice","","Record containing data on the given active device",null,null],[12,"offset","","Device offset",8,null],[12,"iv_offset","","Initialization vector offset",8,null],[12,"size","","Size of the device",8,null],[12,"flags","","Flags with activation options",8,null],[3,"CryptRuntime","","Handle for runtime attribute options",null,null],[3,"CryptPbkdfFlags","","Wrapper for a set of CryptPbkdfFlag",null,null],[3,"CryptPbkdfType","","Rust representation of `crypt_pbkdf_type`",null,null],[12,"type_","","",9,null],[12,"hash","","",9,null],[12,"time_ms","","",9,null],[12,"iterations","","",9,null],[12,"max_memory_kb","","",9,null],[12,"parallel_threads","","",9,null],[12,"flags","","",9,null],[3,"CryptPbkdfTypeRef","","A type wrapping a PBKDF type with pointers derived from…",null,null],[12,"inner","","Field containing a `crypt_pbkdf_type` that contains…",10,null],[3,"CryptSettings","","Handle to operate on cryptsetup device settings",null,null],[3,"KeyslotsSize","","Size in bytes for the keyslots.",null,null],[3,"CryptDeviceStatus","","Handle for crypt device status operations",null,null],[3,"CryptWipe","","Handle for volume key operations",null,null],[4,"CryptActivateFlag","","Enum wrapping `CRYPT_ACTIVATE_*` flags",null,null],[13,"Readonly","","",11,null],[13,"NoUuid","","",11,null],[13,"Shared","","",11,null],[13,"AllowDiscards","","",11,null],[13,"Private","","",11,null],[13,"Corrupted","","",11,null],[13,"SameCpuCrypt","","",11,null],[13,"SubmitFromCryptCpus","","",11,null],[13,"IgnoreCorruption","","",11,null],[13,"RestartOnCorruption","","",11,null],[13,"IgnoreZeroBlocks","","",11,null],[13,"KeyringKey","","",11,null],[13,"NoJournal","","",11,null],[13,"Recovery","","",11,null],[13,"IgnorePersistent","","",11,null],[13,"CheckAtMostOnce","","",11,null],[13,"AllowUnboundKey","","",11,null],[13,"Recalculate","","",11,null],[13,"Refresh","","",11,null],[13,"SerializeMemoryHardPbkdf","","",11,null],[13,"NoJournalBitmap","","",11,null],[4,"CryptDeactivateFlag","","Flags for crypt deactivate operations",null,null],[13,"Deferred","","",12,null],[13,"Force","","",12,null],[4,"CryptDebugLevel","","Debug log level",null,null],[13,"All","","",13,null],[13,"Json","","",13,null],[13,"None","","",13,null],[4,"LibcryptErr","","Error returned from any libcryptsetup-rs function",null,null],[13,"IOError","","Wrapper for `io::Error`",14,null],[13,"UuidError","","Wrapper for `uuid::parser::ParseError`",14,null],[13,"NullError","","Wrapper for `ffi::NulError`",14,null],[13,"Utf8Error","","Wrapper for `str::Utf8Error`",14,null],[13,"JsonError","","Wrapper for `serde_json::Error`",14,null],[13,"InvalidConversion","","Indicates that a Rust/C conversion was unsuccessful",14,null],[13,"NullPtr","","Indicates that a pointer returned was null signifying an…",14,null],[13,"NoNull","","Indicates that a `&'static str` was not created with…",14,null],[13,"Other","","Custom message",14,null],[4,"CryptVerityFlag","","Verity format flags",null,null],[13,"NoHeader","","",15,null],[13,"CheckHash","","",15,null],[13,"CreateHash","","",15,null],[4,"EncryptionFormat","","Device formatting type options",null,null],[13,"Plain","","",16,null],[13,"Luks1","","",16,null],[13,"Luks2","","",16,null],[13,"Loopaes","","",16,null],[13,"Verity","","",16,null],[13,"Tcrypt","","",16,null],[13,"Integrity","","",16,null],[4,"CryptKeyfileFlag","","Flags for reading keyfiles",null,null],[13,"StopEol","","",17,null],[4,"CryptVolumeKeyFlag","","Flags for tunable options when operating with volume keys",null,null],[13,"NoSegment","","",18,null],[13,"Set","","",18,null],[13,"DigestReuse","","",18,null],[4,"KeyslotInfo","","Value indicating the status of a keyslot",null,null],[13,"Invalid","","",19,null],[13,"Inactive","","",19,null],[13,"Active","","",19,null],[13,"ActiveLast","","",19,null],[13,"Unbound","","",19,null],[4,"KeyslotPriority","","Value indicating the priority of a keyslot",null,null],[13,"Invalid","","",20,null],[13,"Ignore","","",20,null],[13,"Normal","","",20,null],[13,"Prefer","","",20,null],[4,"CryptLogLevel","","Logging levels",null,null],[13,"Normal","","",21,null],[13,"Error","","",21,null],[13,"Verbose","","",21,null],[13,"Debug","","",21,null],[13,"DebugJson","","",21,null],[4,"CryptRequirementFlag","","Wrapper enum for `CRYPT_REQUIREMENT_*` flags",null,null],[13,"OfflineReencrypt","","",22,null],[13,"OnlineReencrypt","","",22,null],[13,"Unknown","","",22,null],[4,"CryptReencryptDirectionInfo","","Reencryption direction flags",null,null],[13,"Forward","","",23,null],[13,"Backward","","",23,null],[4,"CryptReencryptFlag","","Enum for `CRYPT_REENCRYPT_*` flags",null,null],[13,"InitializeOnly","","",24,null],[13,"MoveFirstSegment","","",24,null],[13,"ResumeOnly","","",24,null],[13,"Recovery","","",24,null],[4,"CryptReencryptInfo","","Encryption mode flags",null,null],[13,"None","","",25,null],[13,"Clean","","",25,null],[13,"Crash","","",25,null],[13,"Invalid","","",25,null],[4,"CryptReencryptModeInfo","","Encryption mode flags",null,null],[13,"Reencrypt","","",26,null],[13,"Encrypt","","",26,null],[13,"Decrypt","","",26,null],[4,"CryptTokenInfo","","Wrapper enum for `CRYPT_TOKEN_*` values",null,null],[13,"Invalid","","",27,null],[13,"Inactive","","",27,null],[13,"Internal","","",27,null],[13,"InternalUnknown","","",27,null],[13,"External","","",27,null],[13,"ExternalUnknown","","",27,null],[4,"CryptKdf","","Rust representation of key generator enum",null,null],[13,"Pbkdf2","","",28,null],[13,"Argon2I","","",28,null],[13,"Argon2Id","","",28,null],[4,"CryptPbkdfFlag","","Enum wrapping `CRYPT_PBKDF_*` flags",null,null],[13,"IterTimeSet","","",29,null],[13,"NoBenchmark","","",29,null],[4,"CryptRngFlag","","Rust representation of random number generator enum",null,null],[13,"Urandom","","",30,null],[13,"Random","","",30,null],[4,"LockState","","State of memory lock",null,null],[13,"Unlocked","","",31,null],[13,"Locked","","",31,null],[4,"LuksType","","LUKS type (1 or 2)",null,null],[13,"Luks1","","",32,null],[13,"Luks2","","",32,null],[4,"MetadataSize","","Size allocated for metadata",null,null],[13,"Kb16","","",33,null],[13,"Kb32","","",33,null],[13,"Kb64","","",33,null],[13,"Kb128","","",33,null],[13,"Kb256","","",33,null],[13,"Kb512","","",33,null],[13,"Kb1024","","",33,null],[13,"Kb2048","","",33,null],[13,"Kb4096","","",33,null],[4,"CryptStatusInfo","","Status of a crypt device",null,null],[13,"Invalid","","",34,null],[13,"Inactive","","",34,null],[13,"Active","","",34,null],[13,"Busy","","",34,null],[4,"CryptWipePattern","","Pattern for disk wipe",null,null],[13,"Zero","","",35,null],[13,"Random","","",35,null],[13,"EncryptedZero","","",35,null],[13,"Special","","",35,null],[4,"Bool","","Boolean specifying yes or no",null,null],[13,"No","","False",36,null],[13,"Yes","","True",36,null],[4,"Interrupt","","Boolean specifying yes or no",null,null],[13,"No","","False",37,null],[13,"Yes","","True",37,null],[5,"status","","Get status info from device name",null,[[["str"],["cryptdevice"],["option",["cryptdevice"]]],[["cryptstatusinfo"],["libcrypterr"],["result",["cryptstatusinfo","libcrypterr"]]]]],[11,"new","","Create a new set of flags",38,[[["vec",["cryptactivateflag"]],["cryptactivateflag"]],["self"]]],[11,"empty","","Create an empty set of flags",38,[[],["self"]]],[11,"new","","Create a new set of flags",39,[[["cryptdeactivateflag"],["vec",["cryptdeactivateflag"]]],["self"]]],[11,"empty","","Create an empty set of flags",39,[[],["self"]]],[11,"activate_by_passphrase","","Activate device by passphrase.",40,[[["str"],["option",["c_uint"]],["cryptactivateflags"],["self"],["option",["str"]],["c_uint"]],[["result",["c_uint","libcrypterr"]],["c_uint"],["libcrypterr"]]]],[11,"activate_by_keyfile_device_offset","","Activate device by key file",40,[[["cryptactivateflags"],["option",["c_uint"]],["option",["size_t"]],["path"],["u64"],["str"],["size_t"],["self"],["option",["str"]],["c_uint"]],[["result",["c_uint","libcrypterr"]],["c_uint"],["libcrypterr"]]]],[11,"activate_by_volume_key","","Activate device by volume key",40,[[["str"],["option"],["cryptactivateflags"],["self"],["option",["str"]]],[["result",["libcrypterr"]],["libcrypterr"]]]],[11,"activate_by_keyring","","Activeate device using passphrase in kernel keyring",40,[[["str"],["option",["c_uint"]],["cryptactivateflags"],["self"],["option",["str"]],["c_uint"]],[["result",["c_uint","libcrypterr"]],["c_uint"],["libcrypterr"]]]],[11,"deactivate","","Deactivate crypt device",40,[[["str"],["self"],["cryptdeactivateflags"]],[["result",["libcrypterr"]],["libcrypterr"]]]],[11,"header_backup","","Back up header and keyslots to a file",41,[[["path"],["self"],["encryptionformat"]],[["result",["libcrypterr"]],["libcrypterr"]]]],[11,"header_restore","","Restore header and keyslots from a file",41,[[["path"],["self"],["encryptionformat"]],[["result",["libcrypterr"]],["libcrypterr"]]]],[11,"format","","Format and encrypt the given device with the requested…",42,[[["option"],["encryptionformat"],["t"],["option",["uuid"]],["either",["usize"]],["usize"],["self"],["uuid"]],[["result",["libcrypterr"]],["libcrypterr"]]]],[11,"convert","","Convert to new format type",42,[[["self"],["encryptionformat"],["t"]],[["result",["libcrypterr"]],["libcrypterr"]]]],[11,"set_uuid","","Set UUID of crypt device",42,[[["self"],["uuid"],["option",["uuid"]]],[["result",["libcrypterr"]],["libcrypterr"]]]],[11,"set_label","","Set LUKS2 device label",42,[[["str"],["self"],["option",["str"]]],[["result",["libcrypterr"]],["libcrypterr"]]]],[11,"volume_key_keyring","","Set policty on loading volume keys via kernel keyring",42,[[["self"],["bool"]],[["result",["libcrypterr"]],["libcrypterr"]]]],[11,"load","","Load on-disk header parameters based on provided type",42,[[["encryptionformat"],["t"],["self"],["option"]],[["result",["libcrypterr"]],["libcrypterr"]]]],[11,"repair","","Repair crypt device header if invalid",42,[[["self"],["encryptionformat"],["t"]],[["result",["libcrypterr"]],["libcrypterr"]]]],[11,"resize","","Resize crypt device",42,[[["str"],["self"],["u64"]],[["result",["libcrypterr"]],["libcrypterr"]]]],[11,"suspend","","Suspend crypt device",42,[[["str"],["self"]],[["result",["libcrypterr"]],["libcrypterr"]]]],[11,"resume_by_passphrase","","Resume crypt device using a passphrase",42,[[["str"],["self"],["c_int"]],[["result",["c_int","libcrypterr"]],["c_int"],["libcrypterr"]]]],[11,"resume_by_keyfile_device_offset","","Resume crypt device using a key file at an offset on disk",42,[[["str"],["u64"],["path"],["self"],["c_int"],["size_t"]],[["result",["c_int","libcrypterr"]],["c_int"],["libcrypterr"]]]],[11,"set_debug_level","","Set library debug level",43,[[["cryptdebuglevel"]]]],[11,"init","","Initialize by device path",44,[[["path"]],[["libcrypterr"],["result",["cryptdevice","libcrypterr"]],["cryptdevice"]]]],[11,"init_with_data_device","","Initialize by device path or a header path and a data…",44,[[["path"],["either",["path"]]],[["libcrypterr"],["result",["cryptdevice","libcrypterr"]],["cryptdevice"]]]],[11,"init_by_name_and_header","","Initialize by name and header device path",44,[[["str"],["path"],["option",["path"]]],[["libcrypterr"],["result",["cryptdevice","libcrypterr"]],["cryptdevice"]]]],[11,"from_ptr","","Reconstruct a `CryptDevice` object from a pointer",45,[[],["self"]]],[11,"logging_handle","","Get a logging option handle",45,[[["self"]],["cryptlog"]]],[11,"settings_handle","","Get a settings option handle",45,[[["self"]],["cryptsettings"]]],[11,"format_handle","","Get a format option handle",45,[[["self"]],["cryptformat"]]],[11,"context_handle","","Get a context option handle",45,[[["self"]],["cryptcontext"]]],[11,"keyslot_handle","","Get a keyslot option handle",45,[[["self"]],["cryptkeyslot"]]],[11,"runtime_handle","","Get a runtime attribute option handle",45,[[["self"],["str"]],["cryptruntime"]]],[11,"luks2_flag_handle","","Get LUKS2 flags option handle",45,[[["self"]],["cryptluks2flags"]]],[11,"activate_handle","","Get activation option handle",45,[[["self"]],["cryptactivation"]]],[11,"volume_key_handle","","Get volume key option handle",45,[[["self"]],["cryptvolumekey"]]],[11,"status_handle","","Get crypt device status option handle",45,[[["self"]],["cryptdevicestatus"]]],[11,"backup_handle","","Get crypt device backup option handle",45,[[["self"]],["cryptbackup"]]],[11,"debug_handle","","Get crypt debug option handle",45,[[],["cryptdebug"]]],[11,"keyfile_handle","","Get crypt device keyfile option handle",45,[[["self"]],["cryptkeyfile"]]],[11,"wipe_handle","","Get crypt device wipe option handle",45,[[["self"]],["cryptwipe"]]],[11,"token_handle","","Get crypt device LUKS2 token option handle",45,[[["self"]],["cryptluks2token"]]],[11,"reencrypt_handle","","Get crypt device reencryption option handle",45,[[["self"]],["cryptluks2reencrypt"]]],[11,"set_confirm_callback","","Set the callback that prompts the user to confirm an action",45,[[["option"],["t"],["self"],["option"]]]],[11,"set_data_device","","Set the device path for a data device",45,[[["path"],["self"]],[["result",["libcrypterr"]],["libcrypterr"]]]],[11,"set_data_offset","","Set the offset in 4096-byte sectors for the data section…",45,[[["self"],["u64"]],[["result",["libcrypterr"]],["libcrypterr"]]]],[11,"new","","Create a new set of flags",46,[[["vec",["cryptverityflag"]],["cryptverityflag"]],["self"]]],[11,"empty","","Create an empty set of flags",46,[[],["self"]]],[11,"get_type","","Get the formatting type",47,[[["self"]],[["result",["encryptionformat","libcrypterr"]],["encryptionformat"],["libcrypterr"]]]],[11,"get_default_type","","Get the default formatting type",47,[[],[["result",["encryptionformat","libcrypterr"]],["encryptionformat"],["libcrypterr"]]]],[11,"get","","Get volume key from crypt device - first tuple element is…",48,[[["str"],["self"],["c_int"]],[["result",["libcrypterr"]],["libcrypterr"]]]],[11,"verify","","Verify that volume key is valid for crypt device",48,[[["self"]],[["result",["libcrypterr"]],["libcrypterr"]]]],[11,"new","","Create a new set of flags",49,[[["vec",["cryptkeyfileflag"]],["cryptkeyfileflag"]],["self"]]],[11,"empty","","Create an empty set of flags",49,[[],["self"]]],[11,"device_read","","Read keyfile into memory - these bindings will…",50,[[["option",["size_t"]],["cryptkeyfileflags"],["path"],["self"],["u64"],["size_t"]],[["cryptkeyfilecontents"],["libcrypterr"],["result",["cryptkeyfilecontents","libcrypterr"]]]]],[11,"new","","Create a new set of flags",51,[[["vec",["cryptvolumekeyflag"]],["cryptvolumekeyflag"]],["self"]]],[11,"empty","","Create an empty set of flags",51,[[],["self"]]],[11,"add_by_passphrase","","Add key slot using a passphrase",52,[[["option",["c_uint"]],["self"],["c_uint"]],[["result",["c_uint","libcrypterr"]],["c_uint"],["libcrypterr"]]]],[11,"change_by_passphrase","","Change allocated key slot using a passphrase",52,[[["option",["c_uint"]],["self"],["c_uint"]],[["result",["c_int","libcrypterr"]],["c_int"],["libcrypterr"]]]],[11,"add_by_keyfile_device_offset","","Add key slot using key file",52,[[["u64"],["option",["c_uint"]],["self"],["c_uint"]],[["result",["c_uint","libcrypterr"]],["c_uint"],["libcrypterr"]]]],[11,"add_by_key","","Add key slot with a key",52,[[["option"],["option",["c_uint"]],["cryptvolumekeyflags"],["self"],["c_uint"]],[["result",["c_uint","libcrypterr"]],["c_uint"],["libcrypterr"]]]],[11,"destroy","","Destroy key slot",52,[[["self"],["c_uint"]],[["result",["libcrypterr"]],["libcrypterr"]]]],[11,"status","","Get keyslot status",52,[[["self"],["c_uint"]],[["keyslotinfo"],["libcrypterr"],["result",["keyslotinfo","libcrypterr"]]]]],[11,"get_priority","","Get keyslot priority (LUKS2 specific)",52,[[["self"],["c_uint"]],[["result",["keyslotpriority","libcrypterr"]],["libcrypterr"],["keyslotpriority"]]]],[11,"set_priority","","Get keyslot priority (LUKS2 specific)",52,[[["self"],["c_uint"],["keyslotpriority"]],[["result",["libcrypterr"]],["libcrypterr"]]]],[11,"max_keyslots","","Get maximum keyslots supported for device type",52,[[["encryptionformat"]],[["result",["c_uint","libcrypterr"]],["c_uint"],["libcrypterr"]]]],[11,"area","","Get keyslot area pointers",52,[[["self"],["c_uint"]],[["result",["libcrypterr"]],["libcrypterr"]]]],[11,"get_key_size","","Get size of key in keyslot - only different from…",52,[[["self"],["c_uint"]],[["result",["c_uint","libcrypterr"]],["c_uint"],["libcrypterr"]]]],[11,"get_encryption","","Get encryption cipher and key size of keyslot (not data)",52,[[["self"],["option",["c_uint"]],["c_uint"]],[["result",["libcrypterr"]],["libcrypterr"]]]],[11,"get_pbkdf","","Get PBDKF parameters for a keyslot",52,[[["self"],["c_uint"]],[["result",["cryptpbkdftype","libcrypterr"]],["libcrypterr"],["cryptpbkdftype"]]]],[11,"set_encryption","","Set encryption used for keyslot",52,[[["str"],["self"],["size_t"]],[["result",["libcrypterr"]],["libcrypterr"]]]],[11,"get_dir","","Get directory where crypt devices are mapped",52,[[],[["result",["box","libcrypterr"]],["box",["path"]],["libcrypterr"]]]],[11,"log","","Generate a log entry",53,[[["str"],["self"],["cryptloglevel"]],[["result",["libcrypterr"]],["libcrypterr"]]]],[11,"set_log_callback","","Set the callback to be executed on logging events",53,[[["t"],["option"],["self"],["option"]]]],[11,"new","","Create a new set of flags",54,[[["cryptrequirementflag"],["vec",["cryptrequirementflag"]]],["self"]]],[11,"empty","","Create an empty set of flags",54,[[],["self"]]],[11,"persistent_flags_set","","Implementation for setting persistent flags for activation",55,[[["cryptactivateflags"],["self"]],[["result",["libcrypterr"]],["libcrypterr"]]]],[11,"persistent_flags_get","","Implementation for getting persistent flags for activation",55,[[["self"]],[["cryptactivateflags"],["result",["cryptactivateflags","libcrypterr"]],["libcrypterr"]]]],[11,"persistent_flags_set","","Implementation for setting persistent flags for requirements",55,[[["self"],["cryptrequirementflags"]],[["result",["libcrypterr"]],["libcrypterr"]]]],[11,"persistent_flags_get","","Implementation for getting persistent flags for requirements",55,[[["self"]],[["libcrypterr"],["cryptrequirementflags"],["result",["cryptrequirementflags","libcrypterr"]]]]],[11,"new","","Create a new set of flags",56,[[["cryptreencryptflag"],["vec",["cryptreencryptflag"]]],["self"]]],[11,"empty","","Create an empty set of flags",56,[[],["self"]]],[11,"reencrypt_init_by_passphrase","","Initialize reencryption metadata on a device by passphrase",57,[[["str"],["cryptparamsreencrypt"],["self"],["option",["str"]],["c_int"]],[["result",["c_int","libcrypterr"]],["c_int"],["libcrypterr"]]]],[11,"reecrypt_init_by_keyring","","Initialize reencryption metadata on a device by passphrase…",57,[[["str"],["cryptparamsreencrypt"],["self"],["option",["str"]],["c_int"]],[["result",["c_int","libcrypterr"]],["c_int"],["libcrypterr"]]]],[11,"reencrypt","","Run data reencryption",57,[[["self"],["option"]],[["result",["libcrypterr"]],["libcrypterr"]]]],[11,"status","","LUKS2 reencryption status",57,[[["self"],["cryptparamsreencrypt"]],[["cryptreencryptinfo"],["result",["cryptreencryptinfo","libcrypterr"]],["libcrypterr"]]]],[11,"json_get","","Get contents of a token in JSON format",58,[[["self"],["c_uint"]],[["libcrypterr"],["value"],["result",["value","libcrypterr"]]]]],[11,"json_set","","Set contents of a token in JSON format",58,[[["option",["c_uint"]],["value"],["self"],["c_uint"]],[["result",["c_uint","libcrypterr"]],["c_uint"],["libcrypterr"]]]],[11,"status","","Get the token info for a specific token",58,[[["self"],["c_uint"]],[["result",["libcrypterr"]],["libcrypterr"]]]],[11,"luks2_keyring_set","","Create new LUKS2 keyring token",58,[[["str"],["option",["c_uint"]],["self"],["c_uint"]],[["result",["c_uint","libcrypterr"]],["c_uint"],["libcrypterr"]]]],[11,"luks2_keyring_get","","Get LUKS2 keyring token description",58,[[["self"],["c_uint"]],[["result",["string","libcrypterr"]],["string"],["libcrypterr"]]]],[11,"assign_keyslot","","Assign token to keyslot",58,[[["self"],["c_uint"],["option",["c_uint"]]],[["result",["libcrypterr"]],["libcrypterr"]]]],[11,"unassign_keyslot","","Unassign token from keyslot",58,[[["self"],["c_uint"],["option",["c_uint"]]],[["result",["libcrypterr"]],["libcrypterr"]]]],[11,"is_assigned","","Check if token is assigned",58,[[["self"],["c_uint"]],[["libcrypterr"],["bool"],["result",["bool","libcrypterr"]]]]],[11,"register","","Register token handler",58,[[["str"],["crypt_token_buffer_free_func"],["crypt_token_dump_func"],["crypt_token_validate_func"],["crypt_token_open_func"]],[["result",["libcrypterr"]],["libcrypterr"]]]],[11,"activate_by_token","","Activate device or check key using a token",58,[[["c_uint"],["option",["c_uint"]],["t"],["str"],["cryptactivateflags"],["self"],["option"],["option",["str"]]],[["result",["c_uint","libcrypterr"]],["c_uint"],["libcrypterr"]]]],[11,"from_ptr","","Construct a safe memory handle from a pointer and a size.",59,[[["usize"]],["self"]]],[11,"from_ptr","","Construct a safe memory handle from a pointer and a size.",60,[[["usize"]],["self"]]],[11,"alloc","","Allocate a block of memory that will be safely zeroed when…",61,[[["usize"]],["result"]]],[11,"get_active_device","","Get active crypt device attributes",62,[[["self"]],[["activedevice"],["libcrypterr"],["result",["activedevice","libcrypterr"]]]]],[11,"get_active_integrity_failures","","Get detected number of integrity failures",62,[[["self"]],[["result",["u64","libcrypterr"]],["u64"],["libcrypterr"]]]],[11,"new","","Create a new set of flags",63,[[["vec",["cryptpbkdfflag"]],["cryptpbkdfflag"]],["self"]]],[11,"empty","","Create an empty set of flags",63,[[],["self"]]],[11,"new","","Create a new `CryptPbkdfTypeRef` type",10,[[["crypt_pbkdf_type"]],["self"]]],[11,"as_ptr","","Convert Rust expression to an equivalent C pointer",32,[[["self"]]]],[11,"set_rng_type","","Set random number generator type",64,[[["self"],["cryptrngflag"]]]],[11,"get_rng_type","","Get random number generator type",64,[[["self"]],[["result",["cryptrngflag","libcrypterr"]],["libcrypterr"],["cryptrngflag"]]]],[11,"set_pbkdf_type","","Set PBKDF type",64,[[["cryptpbkdftype"],["self"]],[["result",["libcrypterr"]],["libcrypterr"]]]],[11,"get_pbkdf_type_params","","Get PBKDF parameters",64,[[["cryptkdf"]],[["result",["cryptpbkdftype","libcrypterr"]],["libcrypterr"],["cryptpbkdftype"]]]],[11,"get_pbkdf_default","","Get PBKDF default type",64,[[["lukstype"]],[["result",["cryptpbkdftype","libcrypterr"]],["libcrypterr"],["cryptpbkdftype"]]]],[11,"get_pbkdf_type","","Get PBKDF type",64,[[["self"]],[["result",["cryptpbkdftype","libcrypterr"]],["libcrypterr"],["cryptpbkdftype"]]]],[11,"set_iteration_time","","Set the iteration time in milliseconds",64,[[["self"],["u64"]]]],[11,"memory_lock","","Lock or unlock memory",64,[[["lockstate"],["self"]],["lockstate"]]],[11,"metadata_locking","","Lock or unlock the metadata",64,[[["self"],["bool"]],[["result",["libcrypterr"]],["libcrypterr"]]]],[11,"set_metadata_size","","Set the metadata size and keyslot size",64,[[["keyslotssize"],["self"],["metadatasize"]],[["result",["libcrypterr"]],["libcrypterr"]]]],[11,"get_metadata_size","","Get the metadata size and keyslot size",64,[[["self"]],[["result",["libcrypterr"]],["libcrypterr"]]]],[11,"dump","","Dump text info about device to log output",65,[[["self"]],[["result",["libcrypterr"]],["libcrypterr"]]]],[11,"get_cipher","","Get cipher used by device",65,[[["self"]],[["result",["string","libcrypterr"]],["string"],["libcrypterr"]]]],[11,"get_cipher_mode","","Get cipher mode used by device",65,[[["self"]],[["result",["string","libcrypterr"]],["string"],["libcrypterr"]]]],[11,"get_uuid","","Get device UUID",65,[[["self"]],[["uuid"],["result",["uuid","libcrypterr"]],["libcrypterr"]]]],[11,"get_device_path","","Get path to underlying device",65,[[["self"]],[["result",["path","libcrypterr"]],["path"],["libcrypterr"]]]],[11,"get_metadata_device_path","","Get path to detached metadata device or `None` if it is…",65,[[["self"]],[["result",["option","libcrypterr"]],["option",["path"]],["libcrypterr"]]]],[11,"get_data_offset","","Get offset in 512-byte sectors where real data starts",65,[[["self"]],["u64"]]],[11,"get_iv_offset","","Get IV location offset in 512-byte sectors",65,[[["self"]],["u64"]]],[11,"get_volume_key_size","","Get size in bytes of volume key",65,[[["self"]],["c_int"]]],[11,"get_sector_size","","Get size of encryption sectors in bytes",65,[[["self"]],["c_int"]]],[11,"get_verity_info","","Get Verity device parameters",65,[[["self"]],[["cryptparamsverity"],["libcrypterr"],["result",["cryptparamsverity","libcrypterr"]]]]],[11,"get_integrity_info","","Get Integrity device parameters",65,[[["self"]],[["cryptparamsintegrity"],["libcrypterr"],["result",["cryptparamsintegrity","libcrypterr"]]]]],[11,"wipe","","Wipe a device with the selected pattern",66,[[["t"],["path"],["u64"],["bool"],["option"],["size_t"],["self"],["cryptwipepattern"],["option"]],[["result",["libcrypterr"]],["libcrypterr"]]]],[6,"Result","","Result type to be used with `libcryptsetup-rs`",null,null],[8,"SafeMemzero","","A trait to be implemented for a segment of memory that can…",null,null],[10,"safe_memzero","","Zero the data in the buffer. To enable managed zeroing of…",67,[[["self"]]]],[14,"c_str","","Create a C-compatible static string with a null byte",null,null],[14,"c_confirm_callback","","Create a C-compatible callback to determine user…",null,null],[14,"c_logging_callback","","Create a C-compatible logging callback which wraps safe…",null,null],[14,"c_progress_callback","","Create a C-compatible progress callback for wiping a…",null,null],[14,"c_token_handler_open","","Create a C-compatible open callback compatible with…",null,null],[14,"c_token_handler_free","","Create a C-compatible callback for free compatible with…",null,null],[14,"c_token_handler_validate","","Create a C-compatible callback for validate compatible…",null,null],[14,"c_token_handler_dump","","Create a C-compatible callback for compatible with…",null,null],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"into_iter","","",0,[[],["i"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,[[["self"],["t"]]]],[11,"to_string","","",0,[[["self"]],["string"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",38,[[["t"]],["t"]]],[11,"into","","",38,[[],["u"]]],[11,"try_from","","",38,[[["u"]],["result"]]],[11,"try_into","","",38,[[],["result"]]],[11,"borrow","","",38,[[["self"]],["t"]]],[11,"borrow_mut","","",38,[[["self"]],["t"]]],[11,"type_id","","",38,[[["self"]],["typeid"]]],[11,"from","","",40,[[["t"]],["t"]]],[11,"into","","",40,[[],["u"]]],[11,"try_from","","",40,[[["u"]],["result"]]],[11,"try_into","","",40,[[],["result"]]],[11,"borrow","","",40,[[["self"]],["t"]]],[11,"borrow_mut","","",40,[[["self"]],["t"]]],[11,"type_id","","",40,[[["self"]],["typeid"]]],[11,"from","","",39,[[["t"]],["t"]]],[11,"into","","",39,[[],["u"]]],[11,"try_from","","",39,[[["u"]],["result"]]],[11,"try_into","","",39,[[],["result"]]],[11,"borrow","","",39,[[["self"]],["t"]]],[11,"borrow_mut","","",39,[[["self"]],["t"]]],[11,"type_id","","",39,[[["self"]],["typeid"]]],[11,"from","","",41,[[["t"]],["t"]]],[11,"into","","",41,[[],["u"]]],[11,"try_from","","",41,[[["u"]],["result"]]],[11,"try_into","","",41,[[],["result"]]],[11,"borrow","","",41,[[["self"]],["t"]]],[11,"borrow_mut","","",41,[[["self"]],["t"]]],[11,"type_id","","",41,[[["self"]],["typeid"]]],[11,"from","","",42,[[["t"]],["t"]]],[11,"into","","",42,[[],["u"]]],[11,"try_from","","",42,[[["u"]],["result"]]],[11,"try_into","","",42,[[],["result"]]],[11,"borrow","","",42,[[["self"]],["t"]]],[11,"borrow_mut","","",42,[[["self"]],["t"]]],[11,"type_id","","",42,[[["self"]],["typeid"]]],[11,"from","","",43,[[["t"]],["t"]]],[11,"into","","",43,[[],["u"]]],[11,"try_from","","",43,[[["u"]],["result"]]],[11,"try_into","","",43,[[],["result"]]],[11,"borrow","","",43,[[["self"]],["t"]]],[11,"borrow_mut","","",43,[[["self"]],["t"]]],[11,"type_id","","",43,[[["self"]],["typeid"]]],[11,"from","","",45,[[["t"]],["t"]]],[11,"into","","",45,[[],["u"]]],[11,"try_from","","",45,[[["u"]],["result"]]],[11,"try_into","","",45,[[],["result"]]],[11,"borrow","","",45,[[["self"]],["t"]]],[11,"borrow_mut","","",45,[[["self"]],["t"]]],[11,"type_id","","",45,[[["self"]],["typeid"]]],[11,"from","","",44,[[["t"]],["t"]]],[11,"into","","",44,[[],["u"]]],[11,"try_from","","",44,[[["u"]],["result"]]],[11,"try_into","","",44,[[],["result"]]],[11,"borrow","","",44,[[["self"]],["t"]]],[11,"borrow_mut","","",44,[[["self"]],["t"]]],[11,"type_id","","",44,[[["self"]],["typeid"]]],[11,"from","","",47,[[["t"]],["t"]]],[11,"into","","",47,[[],["u"]]],[11,"try_from","","",47,[[["u"]],["result"]]],[11,"try_into","","",47,[[],["result"]]],[11,"borrow","","",47,[[["self"]],["t"]]],[11,"borrow_mut","","",47,[[["self"]],["t"]]],[11,"type_id","","",47,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[],["u"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[],["u"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[],["u"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"from","","",46,[[["t"]],["t"]]],[11,"into","","",46,[[],["u"]]],[11,"try_from","","",46,[[["u"]],["result"]]],[11,"try_into","","",46,[[],["result"]]],[11,"borrow","","",46,[[["self"]],["t"]]],[11,"borrow_mut","","",46,[[["self"]],["t"]]],[11,"type_id","","",46,[[["self"]],["typeid"]]],[11,"from","","",48,[[["t"]],["t"]]],[11,"into","","",48,[[],["u"]]],[11,"try_from","","",48,[[["u"]],["result"]]],[11,"try_into","","",48,[[],["result"]]],[11,"borrow","","",48,[[["self"]],["t"]]],[11,"borrow_mut","","",48,[[["self"]],["t"]]],[11,"type_id","","",48,[[["self"]],["typeid"]]],[11,"from","","",50,[[["t"]],["t"]]],[11,"into","","",50,[[],["u"]]],[11,"try_from","","",50,[[["u"]],["result"]]],[11,"try_into","","",50,[[],["result"]]],[11,"borrow","","",50,[[["self"]],["t"]]],[11,"borrow_mut","","",50,[[["self"]],["t"]]],[11,"type_id","","",50,[[["self"]],["typeid"]]],[11,"from","","",68,[[["t"]],["t"]]],[11,"into","","",68,[[],["u"]]],[11,"try_from","","",68,[[["u"]],["result"]]],[11,"try_into","","",68,[[],["result"]]],[11,"borrow","","",68,[[["self"]],["t"]]],[11,"borrow_mut","","",68,[[["self"]],["t"]]],[11,"type_id","","",68,[[["self"]],["typeid"]]],[11,"from","","",49,[[["t"]],["t"]]],[11,"into","","",49,[[],["u"]]],[11,"try_from","","",49,[[["u"]],["result"]]],[11,"try_into","","",49,[[],["result"]]],[11,"borrow","","",49,[[["self"]],["t"]]],[11,"borrow_mut","","",49,[[["self"]],["t"]]],[11,"type_id","","",49,[[["self"]],["typeid"]]],[11,"from","","",52,[[["t"]],["t"]]],[11,"into","","",52,[[],["u"]]],[11,"try_from","","",52,[[["u"]],["result"]]],[11,"try_into","","",52,[[],["result"]]],[11,"borrow","","",52,[[["self"]],["t"]]],[11,"borrow_mut","","",52,[[["self"]],["t"]]],[11,"type_id","","",52,[[["self"]],["typeid"]]],[11,"from","","",51,[[["t"]],["t"]]],[11,"into","","",51,[[],["u"]]],[11,"try_from","","",51,[[["u"]],["result"]]],[11,"try_into","","",51,[[],["result"]]],[11,"borrow","","",51,[[["self"]],["t"]]],[11,"borrow_mut","","",51,[[["self"]],["t"]]],[11,"type_id","","",51,[[["self"]],["typeid"]]],[11,"from","","",53,[[["t"]],["t"]]],[11,"into","","",53,[[],["u"]]],[11,"try_from","","",53,[[["u"]],["result"]]],[11,"try_into","","",53,[[],["result"]]],[11,"borrow","","",53,[[["self"]],["t"]]],[11,"borrow_mut","","",53,[[["self"]],["t"]]],[11,"type_id","","",53,[[["self"]],["typeid"]]],[11,"from","","",55,[[["t"]],["t"]]],[11,"into","","",55,[[],["u"]]],[11,"try_from","","",55,[[["u"]],["result"]]],[11,"try_into","","",55,[[],["result"]]],[11,"borrow","","",55,[[["self"]],["t"]]],[11,"borrow_mut","","",55,[[["self"]],["t"]]],[11,"type_id","","",55,[[["self"]],["typeid"]]],[11,"from","","",54,[[["t"]],["t"]]],[11,"into","","",54,[[],["u"]]],[11,"try_from","","",54,[[["u"]],["result"]]],[11,"try_into","","",54,[[],["result"]]],[11,"borrow","","",54,[[["self"]],["t"]]],[11,"borrow_mut","","",54,[[["self"]],["t"]]],[11,"type_id","","",54,[[["self"]],["typeid"]]],[11,"from","","",57,[[["t"]],["t"]]],[11,"into","","",57,[[],["u"]]],[11,"try_from","","",57,[[["u"]],["result"]]],[11,"try_into","","",57,[[],["result"]]],[11,"borrow","","",57,[[["self"]],["t"]]],[11,"borrow_mut","","",57,[[["self"]],["t"]]],[11,"type_id","","",57,[[["self"]],["typeid"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[],["u"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"try_into","","",6,[[],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"type_id","","",6,[[["self"]],["typeid"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"into","","",7,[[],["u"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"try_into","","",7,[[],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"type_id","","",7,[[["self"]],["typeid"]]],[11,"from","","",56,[[["t"]],["t"]]],[11,"into","","",56,[[],["u"]]],[11,"try_from","","",56,[[["u"]],["result"]]],[11,"try_into","","",56,[[],["result"]]],[11,"borrow","","",56,[[["self"]],["t"]]],[11,"borrow_mut","","",56,[[["self"]],["t"]]],[11,"type_id","","",56,[[["self"]],["typeid"]]],[11,"from","","",58,[[["t"]],["t"]]],[11,"into","","",58,[[],["u"]]],[11,"try_from","","",58,[[["u"]],["result"]]],[11,"try_into","","",58,[[],["result"]]],[11,"borrow","","",58,[[["self"]],["t"]]],[11,"borrow_mut","","",58,[[["self"]],["t"]]],[11,"type_id","","",58,[[["self"]],["typeid"]]],[11,"from","","",61,[[["t"]],["t"]]],[11,"into","","",61,[[],["u"]]],[11,"try_from","","",61,[[["u"]],["result"]]],[11,"try_into","","",61,[[],["result"]]],[11,"borrow","","",61,[[["self"]],["t"]]],[11,"borrow_mut","","",61,[[["self"]],["t"]]],[11,"type_id","","",61,[[["self"]],["typeid"]]],[11,"from","","",60,[[["t"]],["t"]]],[11,"into","","",60,[[],["u"]]],[11,"try_from","","",60,[[["u"]],["result"]]],[11,"try_into","","",60,[[],["result"]]],[11,"borrow","","",60,[[["self"]],["t"]]],[11,"borrow_mut","","",60,[[["self"]],["t"]]],[11,"type_id","","",60,[[["self"]],["typeid"]]],[11,"from","","",59,[[["t"]],["t"]]],[11,"into","","",59,[[],["u"]]],[11,"try_from","","",59,[[["u"]],["result"]]],[11,"try_into","","",59,[[],["result"]]],[11,"borrow","","",59,[[["self"]],["t"]]],[11,"borrow_mut","","",59,[[["self"]],["t"]]],[11,"type_id","","",59,[[["self"]],["typeid"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"into","","",8,[[],["u"]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"try_into","","",8,[[],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"type_id","","",8,[[["self"]],["typeid"]]],[11,"from","","",62,[[["t"]],["t"]]],[11,"into","","",62,[[],["u"]]],[11,"try_from","","",62,[[["u"]],["result"]]],[11,"try_into","","",62,[[],["result"]]],[11,"borrow","","",62,[[["self"]],["t"]]],[11,"borrow_mut","","",62,[[["self"]],["t"]]],[11,"type_id","","",62,[[["self"]],["typeid"]]],[11,"from","","",63,[[["t"]],["t"]]],[11,"into","","",63,[[],["u"]]],[11,"try_from","","",63,[[["u"]],["result"]]],[11,"try_into","","",63,[[],["result"]]],[11,"borrow","","",63,[[["self"]],["t"]]],[11,"borrow_mut","","",63,[[["self"]],["t"]]],[11,"type_id","","",63,[[["self"]],["typeid"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"into","","",9,[[],["u"]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"try_into","","",9,[[],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"type_id","","",9,[[["self"]],["typeid"]]],[11,"from","","",10,[[["t"]],["t"]]],[11,"into","","",10,[[],["u"]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"try_into","","",10,[[],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"type_id","","",10,[[["self"]],["typeid"]]],[11,"from","","",64,[[["t"]],["t"]]],[11,"into","","",64,[[],["u"]]],[11,"try_from","","",64,[[["u"]],["result"]]],[11,"try_into","","",64,[[],["result"]]],[11,"borrow","","",64,[[["self"]],["t"]]],[11,"borrow_mut","","",64,[[["self"]],["t"]]],[11,"type_id","","",64,[[["self"]],["typeid"]]],[11,"from","","",69,[[["t"]],["t"]]],[11,"into","","",69,[[],["u"]]],[11,"try_from","","",69,[[["u"]],["result"]]],[11,"try_into","","",69,[[],["result"]]],[11,"borrow","","",69,[[["self"]],["t"]]],[11,"borrow_mut","","",69,[[["self"]],["t"]]],[11,"type_id","","",69,[[["self"]],["typeid"]]],[11,"from","","",65,[[["t"]],["t"]]],[11,"into","","",65,[[],["u"]]],[11,"try_from","","",65,[[["u"]],["result"]]],[11,"try_into","","",65,[[],["result"]]],[11,"borrow","","",65,[[["self"]],["t"]]],[11,"borrow_mut","","",65,[[["self"]],["t"]]],[11,"type_id","","",65,[[["self"]],["typeid"]]],[11,"from","","",66,[[["t"]],["t"]]],[11,"into","","",66,[[],["u"]]],[11,"try_from","","",66,[[["u"]],["result"]]],[11,"try_into","","",66,[[],["result"]]],[11,"borrow","","",66,[[["self"]],["t"]]],[11,"borrow_mut","","",66,[[["self"]],["t"]]],[11,"type_id","","",66,[[["self"]],["typeid"]]],[11,"from","","",11,[[["t"]],["t"]]],[11,"into","","",11,[[],["u"]]],[11,"to_owned","","",11,[[["self"]],["t"]]],[11,"clone_into","","",11,[[["self"],["t"]]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"try_into","","",11,[[],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"type_id","","",11,[[["self"]],["typeid"]]],[11,"from","","",12,[[["t"]],["t"]]],[11,"into","","",12,[[],["u"]]],[11,"to_owned","","",12,[[["self"]],["t"]]],[11,"clone_into","","",12,[[["self"],["t"]]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"try_into","","",12,[[],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"type_id","","",12,[[["self"]],["typeid"]]],[11,"from","","",13,[[["t"]],["t"]]],[11,"into","","",13,[[],["u"]]],[11,"to_owned","","",13,[[["self"]],["t"]]],[11,"clone_into","","",13,[[["self"],["t"]]]],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"try_into","","",13,[[],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"type_id","","",13,[[["self"]],["typeid"]]],[11,"from","","",14,[[["t"]],["t"]]],[11,"into","","",14,[[],["u"]]],[11,"to_string","","",14,[[["self"]],["string"]]],[11,"try_from","","",14,[[["u"]],["result"]]],[11,"try_into","","",14,[[],["result"]]],[11,"borrow","","",14,[[["self"]],["t"]]],[11,"borrow_mut","","",14,[[["self"]],["t"]]],[11,"type_id","","",14,[[["self"]],["typeid"]]],[11,"from","","",15,[[["t"]],["t"]]],[11,"into","","",15,[[],["u"]]],[11,"to_owned","","",15,[[["self"]],["t"]]],[11,"clone_into","","",15,[[["self"],["t"]]]],[11,"try_from","","",15,[[["u"]],["result"]]],[11,"try_into","","",15,[[],["result"]]],[11,"borrow","","",15,[[["self"]],["t"]]],[11,"borrow_mut","","",15,[[["self"]],["t"]]],[11,"type_id","","",15,[[["self"]],["typeid"]]],[11,"from","","",16,[[["t"]],["t"]]],[11,"into","","",16,[[],["u"]]],[11,"try_from","","",16,[[["u"]],["result"]]],[11,"try_into","","",16,[[],["result"]]],[11,"borrow","","",16,[[["self"]],["t"]]],[11,"borrow_mut","","",16,[[["self"]],["t"]]],[11,"type_id","","",16,[[["self"]],["typeid"]]],[11,"from","","",17,[[["t"]],["t"]]],[11,"into","","",17,[[],["u"]]],[11,"to_owned","","",17,[[["self"]],["t"]]],[11,"clone_into","","",17,[[["self"],["t"]]]],[11,"try_from","","",17,[[["u"]],["result"]]],[11,"try_into","","",17,[[],["result"]]],[11,"borrow","","",17,[[["self"]],["t"]]],[11,"borrow_mut","","",17,[[["self"]],["t"]]],[11,"type_id","","",17,[[["self"]],["typeid"]]],[11,"from","","",18,[[["t"]],["t"]]],[11,"into","","",18,[[],["u"]]],[11,"to_owned","","",18,[[["self"]],["t"]]],[11,"clone_into","","",18,[[["self"],["t"]]]],[11,"try_from","","",18,[[["u"]],["result"]]],[11,"try_into","","",18,[[],["result"]]],[11,"borrow","","",18,[[["self"]],["t"]]],[11,"borrow_mut","","",18,[[["self"]],["t"]]],[11,"type_id","","",18,[[["self"]],["typeid"]]],[11,"from","","",19,[[["t"]],["t"]]],[11,"into","","",19,[[],["u"]]],[11,"to_owned","","",19,[[["self"]],["t"]]],[11,"clone_into","","",19,[[["self"],["t"]]]],[11,"try_from","","",19,[[["u"]],["result"]]],[11,"try_into","","",19,[[],["result"]]],[11,"borrow","","",19,[[["self"]],["t"]]],[11,"borrow_mut","","",19,[[["self"]],["t"]]],[11,"type_id","","",19,[[["self"]],["typeid"]]],[11,"from","","",20,[[["t"]],["t"]]],[11,"into","","",20,[[],["u"]]],[11,"to_owned","","",20,[[["self"]],["t"]]],[11,"clone_into","","",20,[[["self"],["t"]]]],[11,"try_from","","",20,[[["u"]],["result"]]],[11,"try_into","","",20,[[],["result"]]],[11,"borrow","","",20,[[["self"]],["t"]]],[11,"borrow_mut","","",20,[[["self"]],["t"]]],[11,"type_id","","",20,[[["self"]],["typeid"]]],[11,"from","","",21,[[["t"]],["t"]]],[11,"into","","",21,[[],["u"]]],[11,"try_from","","",21,[[["u"]],["result"]]],[11,"try_into","","",21,[[],["result"]]],[11,"borrow","","",21,[[["self"]],["t"]]],[11,"borrow_mut","","",21,[[["self"]],["t"]]],[11,"type_id","","",21,[[["self"]],["typeid"]]],[11,"from","","",22,[[["t"]],["t"]]],[11,"into","","",22,[[],["u"]]],[11,"to_owned","","",22,[[["self"]],["t"]]],[11,"clone_into","","",22,[[["self"],["t"]]]],[11,"try_from","","",22,[[["u"]],["result"]]],[11,"try_into","","",22,[[],["result"]]],[11,"borrow","","",22,[[["self"]],["t"]]],[11,"borrow_mut","","",22,[[["self"]],["t"]]],[11,"type_id","","",22,[[["self"]],["typeid"]]],[11,"from","","",23,[[["t"]],["t"]]],[11,"into","","",23,[[],["u"]]],[11,"to_owned","","",23,[[["self"]],["t"]]],[11,"clone_into","","",23,[[["self"],["t"]]]],[11,"try_from","","",23,[[["u"]],["result"]]],[11,"try_into","","",23,[[],["result"]]],[11,"borrow","","",23,[[["self"]],["t"]]],[11,"borrow_mut","","",23,[[["self"]],["t"]]],[11,"type_id","","",23,[[["self"]],["typeid"]]],[11,"from","","",24,[[["t"]],["t"]]],[11,"into","","",24,[[],["u"]]],[11,"to_owned","","",24,[[["self"]],["t"]]],[11,"clone_into","","",24,[[["self"],["t"]]]],[11,"try_from","","",24,[[["u"]],["result"]]],[11,"try_into","","",24,[[],["result"]]],[11,"borrow","","",24,[[["self"]],["t"]]],[11,"borrow_mut","","",24,[[["self"]],["t"]]],[11,"type_id","","",24,[[["self"]],["typeid"]]],[11,"from","","",25,[[["t"]],["t"]]],[11,"into","","",25,[[],["u"]]],[11,"to_owned","","",25,[[["self"]],["t"]]],[11,"clone_into","","",25,[[["self"],["t"]]]],[11,"try_from","","",25,[[["u"]],["result"]]],[11,"try_into","","",25,[[],["result"]]],[11,"borrow","","",25,[[["self"]],["t"]]],[11,"borrow_mut","","",25,[[["self"]],["t"]]],[11,"type_id","","",25,[[["self"]],["typeid"]]],[11,"from","","",26,[[["t"]],["t"]]],[11,"into","","",26,[[],["u"]]],[11,"to_owned","","",26,[[["self"]],["t"]]],[11,"clone_into","","",26,[[["self"],["t"]]]],[11,"try_from","","",26,[[["u"]],["result"]]],[11,"try_into","","",26,[[],["result"]]],[11,"borrow","","",26,[[["self"]],["t"]]],[11,"borrow_mut","","",26,[[["self"]],["t"]]],[11,"type_id","","",26,[[["self"]],["typeid"]]],[11,"from","","",27,[[["t"]],["t"]]],[11,"into","","",27,[[],["u"]]],[11,"to_owned","","",27,[[["self"]],["t"]]],[11,"clone_into","","",27,[[["self"],["t"]]]],[11,"try_from","","",27,[[["u"]],["result"]]],[11,"try_into","","",27,[[],["result"]]],[11,"borrow","","",27,[[["self"]],["t"]]],[11,"borrow_mut","","",27,[[["self"]],["t"]]],[11,"type_id","","",27,[[["self"]],["typeid"]]],[11,"from","","",28,[[["t"]],["t"]]],[11,"into","","",28,[[],["u"]]],[11,"try_from","","",28,[[["u"]],["result"]]],[11,"try_into","","",28,[[],["result"]]],[11,"borrow","","",28,[[["self"]],["t"]]],[11,"borrow_mut","","",28,[[["self"]],["t"]]],[11,"type_id","","",28,[[["self"]],["typeid"]]],[11,"from","","",29,[[["t"]],["t"]]],[11,"into","","",29,[[],["u"]]],[11,"to_owned","","",29,[[["self"]],["t"]]],[11,"clone_into","","",29,[[["self"],["t"]]]],[11,"try_from","","",29,[[["u"]],["result"]]],[11,"try_into","","",29,[[],["result"]]],[11,"borrow","","",29,[[["self"]],["t"]]],[11,"borrow_mut","","",29,[[["self"]],["t"]]],[11,"type_id","","",29,[[["self"]],["typeid"]]],[11,"from","","",30,[[["t"]],["t"]]],[11,"into","","",30,[[],["u"]]],[11,"to_owned","","",30,[[["self"]],["t"]]],[11,"clone_into","","",30,[[["self"],["t"]]]],[11,"try_from","","",30,[[["u"]],["result"]]],[11,"try_into","","",30,[[],["result"]]],[11,"borrow","","",30,[[["self"]],["t"]]],[11,"borrow_mut","","",30,[[["self"]],["t"]]],[11,"type_id","","",30,[[["self"]],["typeid"]]],[11,"from","","",31,[[["t"]],["t"]]],[11,"into","","",31,[[],["u"]]],[11,"try_from","","",31,[[["u"]],["result"]]],[11,"try_into","","",31,[[],["result"]]],[11,"borrow","","",31,[[["self"]],["t"]]],[11,"borrow_mut","","",31,[[["self"]],["t"]]],[11,"type_id","","",31,[[["self"]],["typeid"]]],[11,"from","","",32,[[["t"]],["t"]]],[11,"into","","",32,[[],["u"]]],[11,"try_from","","",32,[[["u"]],["result"]]],[11,"try_into","","",32,[[],["result"]]],[11,"borrow","","",32,[[["self"]],["t"]]],[11,"borrow_mut","","",32,[[["self"]],["t"]]],[11,"type_id","","",32,[[["self"]],["typeid"]]],[11,"from","","",33,[[["t"]],["t"]]],[11,"into","","",33,[[],["u"]]],[11,"to_owned","","",33,[[["self"]],["t"]]],[11,"clone_into","","",33,[[["self"],["t"]]]],[11,"try_from","","",33,[[["u"]],["result"]]],[11,"try_into","","",33,[[],["result"]]],[11,"borrow","","",33,[[["self"]],["t"]]],[11,"borrow_mut","","",33,[[["self"]],["t"]]],[11,"type_id","","",33,[[["self"]],["typeid"]]],[11,"from","","",34,[[["t"]],["t"]]],[11,"into","","",34,[[],["u"]]],[11,"to_owned","","",34,[[["self"]],["t"]]],[11,"clone_into","","",34,[[["self"],["t"]]]],[11,"try_from","","",34,[[["u"]],["result"]]],[11,"try_into","","",34,[[],["result"]]],[11,"borrow","","",34,[[["self"]],["t"]]],[11,"borrow_mut","","",34,[[["self"]],["t"]]],[11,"type_id","","",34,[[["self"]],["typeid"]]],[11,"from","","",35,[[["t"]],["t"]]],[11,"into","","",35,[[],["u"]]],[11,"to_owned","","",35,[[["self"]],["t"]]],[11,"clone_into","","",35,[[["self"],["t"]]]],[11,"try_from","","",35,[[["u"]],["result"]]],[11,"try_into","","",35,[[],["result"]]],[11,"borrow","","",35,[[["self"]],["t"]]],[11,"borrow_mut","","",35,[[["self"]],["t"]]],[11,"type_id","","",35,[[["self"]],["typeid"]]],[11,"from","","",36,[[["t"]],["t"]]],[11,"into","","",36,[[],["u"]]],[11,"try_from","","",36,[[["u"]],["result"]]],[11,"try_into","","",36,[[],["result"]]],[11,"borrow","","",36,[[["self"]],["t"]]],[11,"borrow_mut","","",36,[[["self"]],["t"]]],[11,"type_id","","",36,[[["self"]],["typeid"]]],[11,"from","","",37,[[["t"]],["t"]]],[11,"into","","",37,[[],["u"]]],[11,"try_from","","",37,[[["u"]],["result"]]],[11,"try_into","","",37,[[],["result"]]],[11,"borrow","","",37,[[["self"]],["t"]]],[11,"borrow_mut","","",37,[[["self"]],["t"]]],[11,"type_id","","",37,[[["self"]],["typeid"]]],[11,"eq","","",0,[[["either"],["self"]],["bool"]]],[11,"ne","","",0,[[["either"],["self"]],["bool"]]],[11,"cmp","","",0,[[["either"],["self"]],["ordering"]]],[11,"fill_buf","","",0,[[["self"]],[["error"],["result",["error"]]]]],[11,"consume","","",0,[[["self"],["usize"]]]],[11,"next_back","","",0,[[["self"]],["option"]]],[11,"read","","",0,[[["self"]],[["error"],["result",["usize","error"]],["usize"]]]],[11,"read_to_end","","",0,[[["self"],["vec"]],[["error"],["result",["usize","error"]],["usize"]]]],[11,"clone","","",0,[[["self"]],["either"]]],[11,"fmt","","",0,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"into","","",0,[[],["result"]]],[11,"deref","","",0,[[["self"]]]],[11,"as_ref","","",0,[[["self"]],["target"]]],[11,"as_ref","","",0,[[["self"]],["path"]]],[11,"as_ref","","",0,[[["self"]],["str"]]],[11,"as_ref","","",0,[[["self"]]]],[11,"as_ref","","",0,[[["self"]],["osstr"]]],[11,"as_ref","","",0,[[["self"]],["cstr"]]],[11,"partial_cmp","","",0,[[["either"],["self"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",0,[[["either"],["self"]],["bool"]]],[11,"le","","",0,[[["either"],["self"]],["bool"]]],[11,"gt","","",0,[[["either"],["self"]],["bool"]]],[11,"ge","","",0,[[["either"],["self"]],["bool"]]],[11,"write","","",0,[[["self"]],[["error"],["result",["usize","error"]],["usize"]]]],[11,"flush","","",0,[[["self"]],[["error"],["result",["error"]]]]],[11,"from","","",0,[[["result"]],["either"]]],[11,"extend","","",0,[[["self"],["t"]]]],[11,"description","","",0,[[["self"]],["str"]]],[11,"cause","","",0,[[["self"]],[["option",["error"]],["error"]]]],[11,"as_mut","","",0,[[["self"]],["path"]]],[11,"as_mut","","",0,[[["self"]],["osstr"]]],[11,"as_mut","","",0,[[["self"]],["target"]]],[11,"as_mut","","",0,[[["self"]],["str"]]],[11,"as_mut","","",0,[[["self"]],["cstr"]]],[11,"as_mut","","",0,[[["self"]]]],[11,"next","","",0,[[["self"]],["option"]]],[11,"size_hint","","",0,[[["self"]]]],[11,"fold","","",0,[[["acc"],["g"]],["acc"]]],[11,"count","","",0,[[],["usize"]]],[11,"last","","",0,[[],["option"]]],[11,"nth","","",0,[[["self"],["usize"]],["option"]]],[11,"collect","","",0,[[],["b"]]],[11,"all","","",0,[[["self"],["f"]],["bool"]]],[11,"fmt","","",0,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"hash","","",0,[[["self"],["__h"]]]],[11,"deref_mut","","",0,[[["self"]]]],[11,"safe_memzero","","",59,[[["self"]]]],[11,"safe_memzero","","",60,[[["self"]]]],[11,"safe_memzero","","",61,[[["self"]]]],[11,"drop","","",45,[[["self"]]]],[11,"drop","","",59,[[["self"]]]],[11,"drop","","",60,[[["self"]]]],[11,"drop","","",61,[[["self"]]]],[11,"as_mut","","",59,[[["self"]]]],[11,"as_mut","","",60,[[["self"]]]],[11,"as_mut","","",61,[[["self"]]]],[11,"as_ref","","",68,[[["self"]]]],[11,"as_ref","","",59,[[["self"]]]],[11,"as_ref","","",60,[[["self"]]]],[11,"as_ref","","",61,[[["self"]]]],[11,"from","","",31,[[["c_int"]],["self"]]],[11,"from","","",36,[[["c_int"]],["self"]]],[11,"from","","",37,[[["c_int"]],["self"]]],[11,"into","","",11,[[],["u32"]]],[11,"into","","",38,[[],["u32"]]],[11,"into","","",12,[[],["u32"]]],[11,"into","","",39,[[],["u32"]]],[11,"into","","",13,[[],["c_int"]]],[11,"into","","",15,[[],["u32"]]],[11,"into","","",46,[[],["u32"]]],[11,"into","","",17,[[],["u32"]]],[11,"into","","",49,[[],["u32"]]],[11,"into","","",18,[[],["u32"]]],[11,"into","","",51,[[],["u32"]]],[11,"into","","",19,[[],["u32"]]],[11,"into","","",20,[[],["i32"]]],[11,"into","","",22,[[],["u32"]]],[11,"into","","",54,[[],["u32"]]],[11,"into","","",25,[[],["u32"]]],[11,"into","","",26,[[],["u32"]]],[11,"into","","",23,[[],["u32"]]],[11,"into","","",24,[[],["u32"]]],[11,"into","","",56,[[],["u32"]]],[11,"into","","",27,[[],["u32"]]],[11,"into","","",30,[[],["u32"]]],[11,"into","","",29,[[],["u32"]]],[11,"into","","",63,[[],["u32"]]],[11,"into","","",34,[[],["u32"]]],[11,"into","","",35,[[],["u32"]]],[11,"clone","","",11,[[["self"]],["cryptactivateflag"]]],[11,"clone","","",12,[[["self"]],["cryptdeactivateflag"]]],[11,"clone","","",13,[[["self"]],["cryptdebuglevel"]]],[11,"clone","","",15,[[["self"]],["cryptverityflag"]]],[11,"clone","","",17,[[["self"]],["cryptkeyfileflag"]]],[11,"clone","","",18,[[["self"]],["cryptvolumekeyflag"]]],[11,"clone","","",19,[[["self"]],["keyslotinfo"]]],[11,"clone","","",20,[[["self"]],["keyslotpriority"]]],[11,"clone","","",22,[[["self"]],["cryptrequirementflag"]]],[11,"clone","","",25,[[["self"]],["cryptreencryptinfo"]]],[11,"clone","","",26,[[["self"]],["cryptreencryptmodeinfo"]]],[11,"clone","","",23,[[["self"]],["cryptreencryptdirectioninfo"]]],[11,"clone","","",24,[[["self"]],["cryptreencryptflag"]]],[11,"clone","","",27,[[["self"]],["crypttokeninfo"]]],[11,"clone","","",30,[[["self"]],["cryptrngflag"]]],[11,"clone","","",29,[[["self"]],["cryptpbkdfflag"]]],[11,"clone","","",33,[[["self"]],["metadatasize"]]],[11,"clone","","",34,[[["self"]],["cryptstatusinfo"]]],[11,"clone","","",35,[[["self"]],["cryptwipepattern"]]],[11,"eq","","",11,[[["self"],["cryptactivateflag"]],["bool"]]],[11,"eq","","",12,[[["self"],["cryptdeactivateflag"]],["bool"]]],[11,"eq","","",13,[[["cryptdebuglevel"],["self"]],["bool"]]],[11,"eq","","",15,[[["cryptverityflag"],["self"]],["bool"]]],[11,"eq","","",16,[[["self"],["encryptionformat"]],["bool"]]],[11,"eq","","",17,[[["self"],["cryptkeyfileflag"]],["bool"]]],[11,"eq","","",18,[[["self"],["cryptvolumekeyflag"]],["bool"]]],[11,"eq","","",19,[[["keyslotinfo"],["self"]],["bool"]]],[11,"eq","","",20,[[["self"],["keyslotpriority"]],["bool"]]],[11,"eq","","",21,[[["cryptloglevel"],["self"]],["bool"]]],[11,"eq","","",22,[[["self"],["cryptrequirementflag"]],["bool"]]],[11,"eq","","",25,[[["self"],["cryptreencryptinfo"]],["bool"]]],[11,"eq","","",26,[[["cryptreencryptmodeinfo"],["self"]],["bool"]]],[11,"eq","","",23,[[["cryptreencryptdirectioninfo"],["self"]],["bool"]]],[11,"eq","","",24,[[["self"],["cryptreencryptflag"]],["bool"]]],[11,"eq","","",27,[[["crypttokeninfo"],["self"]],["bool"]]],[11,"eq","","",30,[[["cryptrngflag"],["self"]],["bool"]]],[11,"eq","","",28,[[["self"],["cryptkdf"]],["bool"]]],[11,"eq","","",29,[[["cryptpbkdfflag"],["self"]],["bool"]]],[11,"eq","","",32,[[["lukstype"],["self"]],["bool"]]],[11,"eq","","",31,[[["lockstate"],["self"]],["bool"]]],[11,"eq","","",33,[[["self"],["metadatasize"]],["bool"]]],[11,"eq","","",34,[[["cryptstatusinfo"],["self"]],["bool"]]],[11,"eq","","",35,[[["cryptwipepattern"],["self"]],["bool"]]],[11,"eq","","",36,[[["bool"],["self"]],["bool"]]],[11,"eq","","",37,[[["interrupt"],["self"]],["bool"]]],[11,"deref","","",33,[[["self"]],["u64"]]],[11,"deref","","",69,[[["self"]],["u64"]]],[11,"fmt","","",11,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",12,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",13,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",14,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",15,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",16,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",17,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",18,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",19,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",20,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",21,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",22,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",25,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",26,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",23,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",24,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",27,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",30,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",28,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",29,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",32,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",31,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",33,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",34,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",35,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",36,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",37,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",14,[[["formatter"],["self"]],["result"]]],[11,"try_from","","",11,[[["u32"]],["result"]]],[11,"try_from","","",38,[[["u32"]],["result"]]],[11,"try_from","","",12,[[["u32"]],["result"]]],[11,"try_from","","",39,[[["u32"]],["result"]]],[11,"try_from","","",13,[[["c_int"]],["result"]]],[11,"try_from","","",15,[[["u32"]],["result"]]],[11,"try_from","","",46,[[["u32"]],["result"]]],[11,"try_from","","",5,[[["crypt_params_verity"]],["result"]]],[11,"try_from","","",1,[[["crypt_params_integrity"]],["result"]]],[11,"try_from","","",17,[[["u32"]],["result"]]],[11,"try_from","","",49,[[["u32"]],["result"]]],[11,"try_from","","",18,[[["u32"]],["result"]]],[11,"try_from","","",51,[[["u32"]],["result"]]],[11,"try_from","","",19,[[["u32"]],["result"]]],[11,"try_from","","",20,[[["i32"]],["result"]]],[11,"try_from","","",21,[[["c_int"]],["result"]]],[11,"try_from","","",22,[[["u32"]],["result"]]],[11,"try_from","","",54,[[["u32"]],["result"]]],[11,"try_from","","",25,[[["u32"]],["result"]]],[11,"try_from","","",26,[[["u32"]],["result"]]],[11,"try_from","","",23,[[["u32"]],["result"]]],[11,"try_from","","",24,[[["u32"]],["result"]]],[11,"try_from","","",56,[[["u32"]],["result"]]],[11,"try_from","","",27,[[["u32"]],["result"]]],[11,"try_from","","",8,[[["crypt_active_device"]],["result"]]],[11,"try_from","","",30,[[["u32"]],["result"]]],[11,"try_from","","",29,[[["u32"]],["result"]]],[11,"try_from","","",63,[[["u32"]],["result"]]],[11,"try_from","","",9,[[["crypt_pbkdf_type"]],[["result",["cryptpbkdftype","libcrypterr"]],["libcrypterr"],["cryptpbkdftype"]]]],[11,"try_from","","",9,[[["crypt_pbkdf_type"]],["result"]]],[11,"try_from","","",33,[[["u64"]],["result"]]],[11,"try_from","","",69,[[["u64"]],["result"]]],[11,"try_from","","",34,[[["u32"]],["result"]]],[11,"try_from","","",35,[[["u32"]],["result"]]],[11,"is_left","","Return true if the value is the `Left` variant.",0,[[["self"]],["bool"]]],[11,"is_right","","Return true if the value is the `Right` variant.",0,[[["self"]],["bool"]]],[11,"left","","Convert the left side of `Either<L, R>` to an `Option<L>`.",0,[[],["option"]]],[11,"right","","Convert the right side of `Either<L, R>` to an `Option<R>`.",0,[[],["option"]]],[11,"as_ref","","Convert `&Either<L, R>` to `Either<&L, &R>`.",0,[[["self"]],[["l"],["r"],["either"]]]],[11,"as_mut","","Convert `&mut Either<L, R>` to `Either<&mut L, &mut R>`.",0,[[["self"]],[["r"],["l"],["either"]]]],[11,"flip","","Convert `Either<L, R>` to `Either<R, L>`.",0,[[],["either"]]],[11,"map_left","","Apply the function `f` on the value in the `Left` variant…",0,[[["f"]],["either"]]],[11,"map_right","","Apply the function `f` on the value in the `Right` variant…",0,[[["f"]],["either"]]],[11,"either","","Apply one of two functions depending on contents, unifying…",0,[[["f"],["g"]],["t"]]],[11,"either_with","","Like `either`, but provide some context to whichever of…",0,[[["ctx"],["f"],["g"]],["t"]]],[11,"left_and_then","","Apply the function `f` on the value in the `Left` variant…",0,[[["f"]],["either"]]],[11,"right_and_then","","Apply the function `f` on the value in the `Right` variant…",0,[[["f"]],["either"]]],[11,"into_iter","","Convert the inner value to an iterator.",0,[[],["either"]]],[11,"left_or","","Return left value or given value",0,[[["l"]],["l"]]],[11,"left_or_default","","Return left or a default",0,[[],["l"]]],[11,"left_or_else","","Returns left value or computes it from a closure",0,[[["f"]],["l"]]],[11,"right_or","","Return right value or given value",0,[[["r"]],["r"]]],[11,"right_or_default","","Return right or a default",0,[[],["r"]]],[11,"right_or_else","","Returns right value or computes it from a closure",0,[[["f"]],["r"]]],[11,"factor_first","","Factor out a homogeneous type from an either of pairs.",0,[[]]],[11,"factor_second","","Factor out a homogeneous type from an either of pairs.",0,[[]]],[11,"into_inner","","Extract the value of an either over two equivalent types.",0,[[],["t"]]],[11,"map","","Map `f` over the contained value and return the result in…",0,[[["f"]],["either"]]]],"p":[[4,"Either"],[3,"CryptParamsIntegrity"],[3,"CryptParamsIntegrityRef"],[3,"CryptParamsLuks2"],[3,"CryptParamsLuks2Ref"],[3,"CryptParamsVerity"],[3,"CryptParamsReencrypt"],[3,"CryptParamsReencryptRef"],[3,"ActiveDevice"],[3,"CryptPbkdfType"],[3,"CryptPbkdfTypeRef"],[4,"CryptActivateFlag"],[4,"CryptDeactivateFlag"],[4,"CryptDebugLevel"],[4,"LibcryptErr"],[4,"CryptVerityFlag"],[4,"EncryptionFormat"],[4,"CryptKeyfileFlag"],[4,"CryptVolumeKeyFlag"],[4,"KeyslotInfo"],[4,"KeyslotPriority"],[4,"CryptLogLevel"],[4,"CryptRequirementFlag"],[4,"CryptReencryptDirectionInfo"],[4,"CryptReencryptFlag"],[4,"CryptReencryptInfo"],[4,"CryptReencryptModeInfo"],[4,"CryptTokenInfo"],[4,"CryptKdf"],[4,"CryptPbkdfFlag"],[4,"CryptRngFlag"],[4,"LockState"],[4,"LuksType"],[4,"MetadataSize"],[4,"CryptStatusInfo"],[4,"CryptWipePattern"],[4,"Bool"],[4,"Interrupt"],[3,"CryptActivateFlags"],[3,"CryptDeactivateFlags"],[3,"CryptActivation"],[3,"CryptBackup"],[3,"CryptContext"],[3,"CryptDebug"],[3,"CryptInit"],[3,"CryptDevice"],[3,"CryptVerityFlags"],[3,"CryptFormat"],[3,"CryptVolumeKey"],[3,"CryptKeyfileFlags"],[3,"CryptKeyfile"],[3,"CryptVolumeKeyFlags"],[3,"CryptKeyslot"],[3,"CryptLog"],[3,"CryptRequirementFlags"],[3,"CryptLuks2Flags"],[3,"CryptReencryptFlags"],[3,"CryptLuks2Reencrypt"],[3,"CryptLuks2Token"],[3,"SafeOwnedMemZero"],[3,"SafeBorrowedMemZero"],[3,"SafeMemHandle"],[3,"CryptRuntime"],[3,"CryptPbkdfFlags"],[3,"CryptSettings"],[3,"CryptDeviceStatus"],[3,"CryptWipe"],[8,"SafeMemzero"],[3,"CryptKeyfileContents"],[3,"KeyslotsSize"]]};
searchIndex["libcryptsetup_rs_sys"] = {"doc":"","i":[[3,"max_align_t","libcryptsetup_rs_sys","",null,null],[12,"__clang_max_align_nonce1","","",0,null],[12,"__bindgen_padding_0","","",0,null],[12,"__clang_max_align_nonce2","","",0,null],[3,"__fsid_t","","",null,null],[12,"__val","","",1,null],[3,"crypt_device","","",null,null],[3,"crypt_pbkdf_type","","",null,null],[12,"type_","","",2,null],[12,"hash","","",2,null],[12,"time_ms","","",2,null],[12,"iterations","","",2,null],[12,"max_memory_kb","","",2,null],[12,"parallel_threads","","",2,null],[12,"flags","","",2,null],[3,"crypt_params_plain","","",null,null],[12,"hash","","",3,null],[12,"offset","","",3,null],[12,"skip","","",3,null],[12,"size","","",3,null],[12,"sector_size","","",3,null],[3,"crypt_params_luks1","","",null,null],[12,"hash","","",4,null],[12,"data_alignment","","",4,null],[12,"data_device","","",4,null],[3,"crypt_params_loopaes","","",null,null],[12,"hash","","",5,null],[12,"offset","","",5,null],[12,"skip","","",5,null],[3,"crypt_params_verity","","",null,null],[12,"hash_name","","",6,null],[12,"data_device","","",6,null],[12,"hash_device","","",6,null],[12,"fec_device","","",6,null],[12,"salt","","",6,null],[12,"salt_size","","",6,null],[12,"hash_type","","",6,null],[12,"data_block_size","","",6,null],[12,"hash_block_size","","",6,null],[12,"data_size","","",6,null],[12,"hash_area_offset","","",6,null],[12,"fec_area_offset","","",6,null],[12,"fec_roots","","",6,null],[12,"flags","","",6,null],[3,"crypt_params_tcrypt","","",null,null],[12,"passphrase","","",7,null],[12,"passphrase_size","","",7,null],[12,"keyfiles","","",7,null],[12,"keyfiles_count","","",7,null],[12,"hash_name","","",7,null],[12,"cipher","","",7,null],[12,"mode","","",7,null],[12,"key_size","","",7,null],[12,"flags","","",7,null],[12,"veracrypt_pim","","",7,null],[3,"crypt_params_integrity","","",null,null],[12,"journal_size","","",8,null],[12,"journal_watermark","","",8,null],[12,"journal_commit_time","","",8,null],[12,"interleave_sectors","","",8,null],[12,"tag_size","","",8,null],[12,"sector_size","","",8,null],[12,"buffer_sectors","","",8,null],[12,"integrity","","",8,null],[12,"integrity_key_size","","",8,null],[12,"journal_integrity","","",8,null],[12,"journal_integrity_key","","",8,null],[12,"journal_integrity_key_size","","",8,null],[12,"journal_crypt","","",8,null],[12,"journal_crypt_key","","",8,null],[12,"journal_crypt_key_size","","",8,null],[3,"crypt_params_luks2","","",null,null],[12,"pbkdf","","",9,null],[12,"integrity","","",9,null],[12,"integrity_params","","",9,null],[12,"data_alignment","","",9,null],[12,"data_device","","",9,null],[12,"sector_size","","",9,null],[12,"label","","",9,null],[12,"subsystem","","",9,null],[3,"crypt_active_device","","",null,null],[12,"offset","","",10,null],[12,"iv_offset","","",10,null],[12,"size","","",10,null],[12,"flags","","",10,null],[3,"crypt_token_params_luks2_keyring","","",null,null],[12,"key_description","","",11,null],[3,"crypt_token_handler","","",null,null],[12,"name","","",12,null],[12,"open","","",12,null],[12,"buffer_free","","",12,null],[12,"validate","","",12,null],[12,"dump","","",12,null],[3,"crypt_params_reencrypt","","",null,null],[12,"mode","","",13,null],[12,"direction","","",13,null],[12,"resilience","","",13,null],[12,"hash","","",13,null],[12,"data_shift","","",13,null],[12,"max_hotzone_size","","",13,null],[12,"device_size","","",13,null],[12,"luks2","","",13,null],[12,"flags","","",13,null],[5,"crypt_init","","",null,null],[5,"crypt_init_data_device","","",null,null],[5,"crypt_init_by_name_and_header","","",null,null],[5,"crypt_init_by_name","","",null,null],[5,"crypt_free","","",null,null],[5,"crypt_set_confirm_callback","","",null,null],[5,"crypt_set_data_device","","",null,null],[5,"crypt_set_data_offset","","",null,null],[5,"crypt_set_log_callback","","",null,null],[5,"crypt_log","","",null,null],[5,"crypt_set_rng_type","","",null,null],[5,"crypt_get_rng_type","","",null,null],[5,"crypt_set_pbkdf_type","","",null,null],[5,"crypt_get_pbkdf_type_params","","",null,null],[5,"crypt_get_pbkdf_default","","",null,null],[5,"crypt_get_pbkdf_type","","",null,null],[5,"crypt_set_iteration_time","","",null,null],[5,"crypt_memory_lock","","",null,null],[5,"crypt_metadata_locking","","",null,null],[5,"crypt_set_metadata_size","","",null,null],[5,"crypt_get_metadata_size","","",null,null],[5,"crypt_get_type","","",null,null],[5,"crypt_get_default_type","","",null,null],[5,"crypt_format","","",null,null],[5,"crypt_set_compatibility","","",null,null],[5,"crypt_get_compatibility","","",null,null],[5,"crypt_convert","","",null,null],[5,"crypt_set_uuid","","",null,null],[5,"crypt_set_label","","",null,null],[5,"crypt_volume_key_keyring","","",null,null],[5,"crypt_load","","",null,null],[5,"crypt_repair","","",null,null],[5,"crypt_resize","","",null,null],[5,"crypt_suspend","","",null,null],[5,"crypt_resume_by_passphrase","","",null,null],[5,"crypt_resume_by_keyfile_device_offset","","",null,null],[5,"crypt_resume_by_keyfile_offset","","",null,null],[5,"crypt_resume_by_keyfile","","",null,null],[5,"crypt_resume_by_volume_key","","",null,null],[5,"crypt_keyslot_add_by_passphrase","","",null,null],[5,"crypt_keyslot_change_by_passphrase","","",null,null],[5,"crypt_keyslot_add_by_keyfile_device_offset","","",null,null],[5,"crypt_keyslot_add_by_keyfile_offset","","",null,null],[5,"crypt_keyslot_add_by_keyfile","","",null,null],[5,"crypt_keyslot_add_by_volume_key","","",null,null],[5,"crypt_keyslot_add_by_key","","",null,null],[5,"crypt_keyslot_destroy","","",null,null],[5,"crypt_get_active_device","","",null,null],[5,"crypt_get_active_integrity_failures","","",null,null],[5,"crypt_persistent_flags_set","","",null,null],[5,"crypt_persistent_flags_get","","",null,null],[5,"crypt_activate_by_passphrase","","",null,null],[5,"crypt_activate_by_keyfile_device_offset","","",null,null],[5,"crypt_activate_by_keyfile_offset","","",null,null],[5,"crypt_activate_by_keyfile","","",null,null],[5,"crypt_activate_by_volume_key","","",null,null],[5,"crypt_activate_by_signed_key","","",null,null],[5,"crypt_activate_by_keyring","","",null,null],[5,"crypt_deactivate_by_name","","",null,null],[5,"crypt_deactivate","","",null,null],[5,"crypt_volume_key_get","","",null,null],[5,"crypt_volume_key_verify","","",null,null],[5,"crypt_status","","",null,null],[5,"crypt_dump","","",null,null],[5,"crypt_get_cipher","","",null,null],[5,"crypt_get_cipher_mode","","",null,null],[5,"crypt_get_uuid","","",null,null],[5,"crypt_get_device_name","","",null,null],[5,"crypt_get_metadata_device_name","","",null,null],[5,"crypt_get_data_offset","","",null,null],[5,"crypt_get_iv_offset","","",null,null],[5,"crypt_get_volume_key_size","","",null,null],[5,"crypt_get_sector_size","","",null,null],[5,"crypt_get_verity_info","","",null,null],[5,"crypt_get_integrity_info","","",null,null],[5,"crypt_benchmark","","",null,null],[5,"crypt_benchmark_pbkdf","","",null,null],[5,"crypt_keyslot_status","","",null,null],[5,"crypt_keyslot_get_priority","","",null,null],[5,"crypt_keyslot_set_priority","","",null,null],[5,"crypt_keyslot_max","","",null,null],[5,"crypt_keyslot_area","","",null,null],[5,"crypt_keyslot_get_key_size","","",null,null],[5,"crypt_keyslot_get_encryption","","",null,null],[5,"crypt_keyslot_get_pbkdf","","",null,null],[5,"crypt_keyslot_set_encryption","","",null,null],[5,"crypt_get_dir","","",null,null],[5,"crypt_header_backup","","",null,null],[5,"crypt_header_restore","","",null,null],[5,"crypt_set_debug_level","","",null,null],[5,"crypt_keyfile_device_read","","",null,null],[5,"crypt_keyfile_read","","",null,null],[5,"crypt_wipe","","",null,null],[5,"crypt_token_json_get","","",null,null],[5,"crypt_token_json_set","","",null,null],[5,"crypt_token_status","","",null,null],[5,"crypt_token_luks2_keyring_set","","",null,null],[5,"crypt_token_luks2_keyring_get","","",null,null],[5,"crypt_token_assign_keyslot","","",null,null],[5,"crypt_token_unassign_keyslot","","",null,null],[5,"crypt_token_is_assigned","","",null,null],[5,"crypt_token_register","","",null,null],[5,"crypt_activate_by_token","","",null,null],[5,"crypt_reencrypt_init_by_passphrase","","",null,null],[5,"crypt_reencrypt_init_by_keyring","","",null,null],[5,"crypt_reencrypt","","",null,null],[5,"crypt_reencrypt_status","","",null,null],[5,"crypt_safe_alloc","","",null,null],[5,"crypt_safe_free","","",null,null],[5,"crypt_safe_realloc","","",null,null],[5,"crypt_safe_memzero","","",null,null],[6,"wchar_t","","",null,null],[6,"__u_char","","",null,null],[6,"__u_short","","",null,null],[6,"__u_int","","",null,null],[6,"__u_long","","",null,null],[6,"__int8_t","","",null,null],[6,"__uint8_t","","",null,null],[6,"__int16_t","","",null,null],[6,"__uint16_t","","",null,null],[6,"__int32_t","","",null,null],[6,"__uint32_t","","",null,null],[6,"__int64_t","","",null,null],[6,"__uint64_t","","",null,null],[6,"__int_least8_t","","",null,null],[6,"__uint_least8_t","","",null,null],[6,"__int_least16_t","","",null,null],[6,"__uint_least16_t","","",null,null],[6,"__int_least32_t","","",null,null],[6,"__uint_least32_t","","",null,null],[6,"__int_least64_t","","",null,null],[6,"__uint_least64_t","","",null,null],[6,"__quad_t","","",null,null],[6,"__u_quad_t","","",null,null],[6,"__intmax_t","","",null,null],[6,"__uintmax_t","","",null,null],[6,"__dev_t","","",null,null],[6,"__uid_t","","",null,null],[6,"__gid_t","","",null,null],[6,"__ino_t","","",null,null],[6,"__ino64_t","","",null,null],[6,"__mode_t","","",null,null],[6,"__nlink_t","","",null,null],[6,"__off_t","","",null,null],[6,"__off64_t","","",null,null],[6,"__pid_t","","",null,null],[6,"__clock_t","","",null,null],[6,"__rlim_t","","",null,null],[6,"__rlim64_t","","",null,null],[6,"__id_t","","",null,null],[6,"__time_t","","",null,null],[6,"__useconds_t","","",null,null],[6,"__suseconds_t","","",null,null],[6,"__daddr_t","","",null,null],[6,"__key_t","","",null,null],[6,"__clockid_t","","",null,null],[6,"__timer_t","","",null,null],[6,"__blksize_t","","",null,null],[6,"__blkcnt_t","","",null,null],[6,"__blkcnt64_t","","",null,null],[6,"__fsblkcnt_t","","",null,null],[6,"__fsblkcnt64_t","","",null,null],[6,"__fsfilcnt_t","","",null,null],[6,"__fsfilcnt64_t","","",null,null],[6,"__fsword_t","","",null,null],[6,"__ssize_t","","",null,null],[6,"__syscall_slong_t","","",null,null],[6,"__syscall_ulong_t","","",null,null],[6,"__loff_t","","",null,null],[6,"__caddr_t","","",null,null],[6,"__intptr_t","","",null,null],[6,"__socklen_t","","",null,null],[6,"__sig_atomic_t","","",null,null],[6,"int_least8_t","","",null,null],[6,"int_least16_t","","",null,null],[6,"int_least32_t","","",null,null],[6,"int_least64_t","","",null,null],[6,"uint_least8_t","","",null,null],[6,"uint_least16_t","","",null,null],[6,"uint_least32_t","","",null,null],[6,"uint_least64_t","","",null,null],[6,"int_fast8_t","","",null,null],[6,"int_fast16_t","","",null,null],[6,"int_fast32_t","","",null,null],[6,"int_fast64_t","","",null,null],[6,"uint_fast8_t","","",null,null],[6,"uint_fast16_t","","",null,null],[6,"uint_fast32_t","","",null,null],[6,"uint_fast64_t","","",null,null],[6,"intmax_t","","",null,null],[6,"uintmax_t","","",null,null],[6,"crypt_flags_type","","",null,null],[6,"crypt_status_info","","",null,null],[6,"crypt_keyslot_info","","",null,null],[6,"crypt_keyslot_priority","","",null,null],[6,"crypt_wipe_pattern","","",null,null],[6,"crypt_token_info","","",null,null],[6,"crypt_token_open_func","","",null,null],[6,"crypt_token_buffer_free_func","","",null,null],[6,"crypt_token_validate_func","","",null,null],[6,"crypt_token_dump_func","","",null,null],[6,"crypt_reencrypt_direction_info","","",null,null],[6,"crypt_reencrypt_mode_info","","",null,null],[6,"crypt_reencrypt_info","","",null,null],[17,"_STDINT_H","","",null,null],[17,"_FEATURES_H","","",null,null],[17,"_DEFAULT_SOURCE","","",null,null],[17,"__USE_ISOC11","","",null,null],[17,"__USE_ISOC99","","",null,null],[17,"__USE_ISOC95","","",null,null],[17,"__USE_POSIX_IMPLICITLY","","",null,null],[17,"_POSIX_SOURCE","","",null,null],[17,"_POSIX_C_SOURCE","","",null,null],[17,"__USE_POSIX","","",null,null],[17,"__USE_POSIX2","","",null,null],[17,"__USE_POSIX199309","","",null,null],[17,"__USE_POSIX199506","","",null,null],[17,"__USE_XOPEN2K","","",null,null],[17,"__USE_XOPEN2K8","","",null,null],[17,"_ATFILE_SOURCE","","",null,null],[17,"__USE_MISC","","",null,null],[17,"__USE_ATFILE","","",null,null],[17,"__USE_FORTIFY_LEVEL","","",null,null],[17,"__GLIBC_USE_DEPRECATED_GETS","","",null,null],[17,"__GLIBC_USE_DEPRECATED_SCANF","","",null,null],[17,"_STDC_PREDEF_H","","",null,null],[17,"__STDC_IEC_559__","","",null,null],[17,"__STDC_IEC_559_COMPLEX__","","",null,null],[17,"__STDC_ISO_10646__","","",null,null],[17,"__GNU_LIBRARY__","","",null,null],[17,"__GLIBC__","","",null,null],[17,"__GLIBC_MINOR__","","",null,null],[17,"_SYS_CDEFS_H","","",null,null],[17,"__glibc_c99_flexarr_available","","",null,null],[17,"__WORDSIZE","","",null,null],[17,"__WORDSIZE_TIME64_COMPAT32","","",null,null],[17,"__SYSCALL_WORDSIZE","","",null,null],[17,"__HAVE_GENERIC_SELECTION","","",null,null],[17,"__GLIBC_USE_LIB_EXT2","","",null,null],[17,"__GLIBC_USE_IEC_60559_BFP_EXT","","",null,null],[17,"__GLIBC_USE_IEC_60559_FUNCS_EXT","","",null,null],[17,"__GLIBC_USE_IEC_60559_TYPES_EXT","","",null,null],[17,"_BITS_TYPES_H","","",null,null],[17,"__TIMESIZE","","",null,null],[17,"_BITS_TYPESIZES_H","","",null,null],[17,"__OFF_T_MATCHES_OFF64_T","","",null,null],[17,"__INO_T_MATCHES_INO64_T","","",null,null],[17,"__RLIM_T_MATCHES_RLIM64_T","","",null,null],[17,"__FD_SETSIZE","","",null,null],[17,"_BITS_TIME64_H","","",null,null],[17,"_BITS_WCHAR_H","","",null,null],[17,"_BITS_STDINT_INTN_H","","",null,null],[17,"_BITS_STDINT_UINTN_H","","",null,null],[17,"INT8_MIN","","",null,null],[17,"INT16_MIN","","",null,null],[17,"INT32_MIN","","",null,null],[17,"INT8_MAX","","",null,null],[17,"INT16_MAX","","",null,null],[17,"INT32_MAX","","",null,null],[17,"UINT8_MAX","","",null,null],[17,"UINT16_MAX","","",null,null],[17,"UINT32_MAX","","",null,null],[17,"INT_LEAST8_MIN","","",null,null],[17,"INT_LEAST16_MIN","","",null,null],[17,"INT_LEAST32_MIN","","",null,null],[17,"INT_LEAST8_MAX","","",null,null],[17,"INT_LEAST16_MAX","","",null,null],[17,"INT_LEAST32_MAX","","",null,null],[17,"UINT_LEAST8_MAX","","",null,null],[17,"UINT_LEAST16_MAX","","",null,null],[17,"UINT_LEAST32_MAX","","",null,null],[17,"INT_FAST8_MIN","","",null,null],[17,"INT_FAST16_MIN","","",null,null],[17,"INT_FAST32_MIN","","",null,null],[17,"INT_FAST8_MAX","","",null,null],[17,"INT_FAST16_MAX","","",null,null],[17,"INT_FAST32_MAX","","",null,null],[17,"UINT_FAST8_MAX","","",null,null],[17,"UINT_FAST16_MAX","","",null,null],[17,"UINT_FAST32_MAX","","",null,null],[17,"INTPTR_MIN","","",null,null],[17,"INTPTR_MAX","","",null,null],[17,"UINTPTR_MAX","","",null,null],[17,"PTRDIFF_MIN","","",null,null],[17,"PTRDIFF_MAX","","",null,null],[17,"SIG_ATOMIC_MIN","","",null,null],[17,"SIG_ATOMIC_MAX","","",null,null],[17,"SIZE_MAX","","",null,null],[17,"WINT_MIN","","",null,null],[17,"WINT_MAX","","",null,null],[17,"CRYPT_LOG_NORMAL","","",null,null],[17,"CRYPT_LOG_ERROR","","",null,null],[17,"CRYPT_LOG_VERBOSE","","",null,null],[17,"CRYPT_LOG_DEBUG","","",null,null],[17,"CRYPT_LOG_DEBUG_JSON","","",null,null],[17,"CRYPT_RNG_URANDOM","","",null,null],[17,"CRYPT_RNG_RANDOM","","",null,null],[17,"CRYPT_PBKDF_ITER_TIME_SET","","",null,null],[17,"CRYPT_PBKDF_NO_BENCHMARK","","",null,null],[17,"CRYPT_KDF_PBKDF2","","",null,null],[17,"CRYPT_KDF_ARGON2I","","",null,null],[17,"CRYPT_KDF_ARGON2ID","","",null,null],[17,"CRYPT_PLAIN","","",null,null],[17,"CRYPT_LUKS1","","",null,null],[17,"CRYPT_LUKS2","","",null,null],[17,"CRYPT_LOOPAES","","",null,null],[17,"CRYPT_VERITY","","",null,null],[17,"CRYPT_TCRYPT","","",null,null],[17,"CRYPT_INTEGRITY","","",null,null],[17,"CRYPT_BITLK","","",null,null],[17,"CRYPT_VERITY_NO_HEADER","","",null,null],[17,"CRYPT_VERITY_CHECK_HASH","","",null,null],[17,"CRYPT_VERITY_CREATE_HASH","","",null,null],[17,"CRYPT_VERITY_ROOT_HASH_SIGNATURE","","",null,null],[17,"CRYPT_TCRYPT_LEGACY_MODES","","",null,null],[17,"CRYPT_TCRYPT_HIDDEN_HEADER","","",null,null],[17,"CRYPT_TCRYPT_BACKUP_HEADER","","",null,null],[17,"CRYPT_TCRYPT_SYSTEM_HEADER","","",null,null],[17,"CRYPT_TCRYPT_VERA_MODES","","",null,null],[17,"CRYPT_COMPAT_LEGACY_INTEGRITY_PADDING","","",null,null],[17,"CRYPT_ANY_SLOT","","",null,null],[17,"CRYPT_VOLUME_KEY_NO_SEGMENT","","",null,null],[17,"CRYPT_VOLUME_KEY_SET","","",null,null],[17,"CRYPT_VOLUME_KEY_DIGEST_REUSE","","",null,null],[17,"CRYPT_ACTIVATE_READONLY","","",null,null],[17,"CRYPT_ACTIVATE_NO_UUID","","",null,null],[17,"CRYPT_ACTIVATE_SHARED","","",null,null],[17,"CRYPT_ACTIVATE_ALLOW_DISCARDS","","",null,null],[17,"CRYPT_ACTIVATE_PRIVATE","","",null,null],[17,"CRYPT_ACTIVATE_CORRUPTED","","",null,null],[17,"CRYPT_ACTIVATE_SAME_CPU_CRYPT","","",null,null],[17,"CRYPT_ACTIVATE_SUBMIT_FROM_CRYPT_CPUS","","",null,null],[17,"CRYPT_ACTIVATE_IGNORE_CORRUPTION","","",null,null],[17,"CRYPT_ACTIVATE_RESTART_ON_CORRUPTION","","",null,null],[17,"CRYPT_ACTIVATE_IGNORE_ZERO_BLOCKS","","",null,null],[17,"CRYPT_ACTIVATE_KEYRING_KEY","","",null,null],[17,"CRYPT_ACTIVATE_NO_JOURNAL","","",null,null],[17,"CRYPT_ACTIVATE_RECOVERY","","",null,null],[17,"CRYPT_ACTIVATE_IGNORE_PERSISTENT","","",null,null],[17,"CRYPT_ACTIVATE_CHECK_AT_MOST_ONCE","","",null,null],[17,"CRYPT_ACTIVATE_ALLOW_UNBOUND_KEY","","",null,null],[17,"CRYPT_ACTIVATE_RECALCULATE","","",null,null],[17,"CRYPT_ACTIVATE_REFRESH","","",null,null],[17,"CRYPT_ACTIVATE_SERIALIZE_MEMORY_HARD_PBKDF","","",null,null],[17,"CRYPT_ACTIVATE_NO_JOURNAL_BITMAP","","",null,null],[17,"CRYPT_ACTIVATE_SUSPENDED","","",null,null],[17,"CRYPT_REQUIREMENT_OFFLINE_REENCRYPT","","",null,null],[17,"CRYPT_REQUIREMENT_ONLINE_REENCRYPT","","",null,null],[17,"CRYPT_REQUIREMENT_UNKNOWN","","",null,null],[17,"CRYPT_DEACTIVATE_DEFERRED","","",null,null],[17,"CRYPT_DEACTIVATE_FORCE","","",null,null],[17,"CRYPT_DEBUG_ALL","","",null,null],[17,"CRYPT_DEBUG_JSON","","",null,null],[17,"CRYPT_DEBUG_NONE","","",null,null],[17,"CRYPT_KEYFILE_STOP_EOL","","",null,null],[17,"CRYPT_WIPE_NO_DIRECT_IO","","",null,null],[17,"CRYPT_ANY_TOKEN","","",null,null],[17,"CRYPT_REENCRYPT_INITIALIZE_ONLY","","",null,null],[17,"CRYPT_REENCRYPT_MOVE_FIRST_SEGMENT","","",null,null],[17,"CRYPT_REENCRYPT_RESUME_ONLY","","",null,null],[17,"CRYPT_REENCRYPT_RECOVERY","","",null,null],[17,"crypt_flags_type_CRYPT_FLAGS_ACTIVATION","","",null,null],[17,"crypt_flags_type_CRYPT_FLAGS_REQUIREMENTS","","",null,null],[17,"crypt_status_info_CRYPT_INVALID","","",null,null],[17,"crypt_status_info_CRYPT_INACTIVE","","",null,null],[17,"crypt_status_info_CRYPT_ACTIVE","","",null,null],[17,"crypt_status_info_CRYPT_BUSY","","",null,null],[17,"crypt_keyslot_info_CRYPT_SLOT_INVALID","","",null,null],[17,"crypt_keyslot_info_CRYPT_SLOT_INACTIVE","","",null,null],[17,"crypt_keyslot_info_CRYPT_SLOT_ACTIVE","","",null,null],[17,"crypt_keyslot_info_CRYPT_SLOT_ACTIVE_LAST","","",null,null],[17,"crypt_keyslot_info_CRYPT_SLOT_UNBOUND","","",null,null],[17,"crypt_keyslot_priority_CRYPT_SLOT_PRIORITY_INVALID","","",null,null],[17,"crypt_keyslot_priority_CRYPT_SLOT_PRIORITY_IGNORE","","",null,null],[17,"crypt_keyslot_priority_CRYPT_SLOT_PRIORITY_NORMAL","","",null,null],[17,"crypt_keyslot_priority_CRYPT_SLOT_PRIORITY_PREFER","","",null,null],[17,"crypt_wipe_pattern_CRYPT_WIPE_ZERO","","",null,null],[17,"crypt_wipe_pattern_CRYPT_WIPE_RANDOM","","",null,null],[17,"crypt_wipe_pattern_CRYPT_WIPE_ENCRYPTED_ZERO","","",null,null],[17,"crypt_wipe_pattern_CRYPT_WIPE_SPECIAL","","",null,null],[17,"crypt_token_info_CRYPT_TOKEN_INVALID","","",null,null],[17,"crypt_token_info_CRYPT_TOKEN_INACTIVE","","",null,null],[17,"crypt_token_info_CRYPT_TOKEN_INTERNAL","","",null,null],[17,"crypt_token_info_CRYPT_TOKEN_INTERNAL_UNKNOWN","","",null,null],[17,"crypt_token_info_CRYPT_TOKEN_EXTERNAL","","",null,null],[17,"crypt_token_info_CRYPT_TOKEN_EXTERNAL_UNKNOWN","","",null,null],[17,"crypt_reencrypt_direction_info_CRYPT_REENCRYPT_FORWARD","","",null,null],[17,"crypt_reencrypt_direction_info_CRYPT_REENCRYPT_BACKWARD","","",null,null],[17,"crypt_reencrypt_mode_info_CRYPT_REENCRYPT_REENCRYPT","","",null,null],[17,"crypt_reencrypt_mode_info_CRYPT_REENCRYPT_ENCRYPT","","",null,null],[17,"crypt_reencrypt_mode_info_CRYPT_REENCRYPT_DECRYPT","","",null,null],[17,"crypt_reencrypt_info_CRYPT_REENCRYPT_NONE","","",null,null],[17,"crypt_reencrypt_info_CRYPT_REENCRYPT_CLEAN","","",null,null],[17,"crypt_reencrypt_info_CRYPT_REENCRYPT_CRASH","","",null,null],[17,"crypt_reencrypt_info_CRYPT_REENCRYPT_INVALID","","",null,null],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,[[["self"],["t"]]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,[[["self"],["t"]]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",14,[[["t"]],["t"]]],[11,"into","","",14,[[],["u"]]],[11,"to_owned","","",14,[[["self"]],["t"]]],[11,"clone_into","","",14,[[["self"],["t"]]]],[11,"try_from","","",14,[[["u"]],["result"]]],[11,"try_into","","",14,[[],["result"]]],[11,"borrow","","",14,[[["self"]],["t"]]],[11,"borrow_mut","","",14,[[["self"]],["t"]]],[11,"type_id","","",14,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,[[["self"],["t"]]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,[[["self"],["t"]]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,[[["self"],["t"]]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[],["u"]]],[11,"to_owned","","",5,[[["self"]],["t"]]],[11,"clone_into","","",5,[[["self"],["t"]]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[],["u"]]],[11,"to_owned","","",6,[[["self"]],["t"]]],[11,"clone_into","","",6,[[["self"],["t"]]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"try_into","","",6,[[],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"type_id","","",6,[[["self"]],["typeid"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"into","","",7,[[],["u"]]],[11,"to_owned","","",7,[[["self"]],["t"]]],[11,"clone_into","","",7,[[["self"],["t"]]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"try_into","","",7,[[],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"type_id","","",7,[[["self"]],["typeid"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"into","","",8,[[],["u"]]],[11,"to_owned","","",8,[[["self"]],["t"]]],[11,"clone_into","","",8,[[["self"],["t"]]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"try_into","","",8,[[],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"type_id","","",8,[[["self"]],["typeid"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"into","","",9,[[],["u"]]],[11,"to_owned","","",9,[[["self"]],["t"]]],[11,"clone_into","","",9,[[["self"],["t"]]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"try_into","","",9,[[],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"type_id","","",9,[[["self"]],["typeid"]]],[11,"from","","",10,[[["t"]],["t"]]],[11,"into","","",10,[[],["u"]]],[11,"to_owned","","",10,[[["self"]],["t"]]],[11,"clone_into","","",10,[[["self"],["t"]]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"try_into","","",10,[[],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"type_id","","",10,[[["self"]],["typeid"]]],[11,"from","","",11,[[["t"]],["t"]]],[11,"into","","",11,[[],["u"]]],[11,"to_owned","","",11,[[["self"]],["t"]]],[11,"clone_into","","",11,[[["self"],["t"]]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"try_into","","",11,[[],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"type_id","","",11,[[["self"]],["typeid"]]],[11,"from","","",12,[[["t"]],["t"]]],[11,"into","","",12,[[],["u"]]],[11,"to_owned","","",12,[[["self"]],["t"]]],[11,"clone_into","","",12,[[["self"],["t"]]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"try_into","","",12,[[],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"type_id","","",12,[[["self"]],["typeid"]]],[11,"from","","",13,[[["t"]],["t"]]],[11,"into","","",13,[[],["u"]]],[11,"to_owned","","",13,[[["self"]],["t"]]],[11,"clone_into","","",13,[[["self"],["t"]]]],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"try_into","","",13,[[],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"type_id","","",13,[[["self"]],["typeid"]]],[11,"clone","","",0,[[["self"]],["max_align_t"]]],[11,"clone","","",1,[[["self"]],["__fsid_t"]]],[11,"clone","","",14,[[["self"]],["crypt_device"]]],[11,"clone","","",2,[[["self"]],["crypt_pbkdf_type"]]],[11,"clone","","",3,[[["self"]],["crypt_params_plain"]]],[11,"clone","","",4,[[["self"]],["crypt_params_luks1"]]],[11,"clone","","",5,[[["self"]],["crypt_params_loopaes"]]],[11,"clone","","",6,[[["self"]],["crypt_params_verity"]]],[11,"clone","","",7,[[["self"]],["crypt_params_tcrypt"]]],[11,"clone","","",8,[[["self"]],["crypt_params_integrity"]]],[11,"clone","","",9,[[["self"]],["crypt_params_luks2"]]],[11,"clone","","",10,[[["self"]],["crypt_active_device"]]],[11,"clone","","",11,[[["self"]],["crypt_token_params_luks2_keyring"]]],[11,"clone","","",12,[[["self"]],["crypt_token_handler"]]],[11,"clone","","",13,[[["self"]],["crypt_params_reencrypt"]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",1,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",14,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",2,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",3,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",4,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",5,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",6,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",7,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",8,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",9,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",10,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",11,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",12,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",13,[[["formatter"],["self"]],["result"]]]],"p":[[3,"max_align_t"],[3,"__fsid_t"],[3,"crypt_pbkdf_type"],[3,"crypt_params_plain"],[3,"crypt_params_luks1"],[3,"crypt_params_loopaes"],[3,"crypt_params_verity"],[3,"crypt_params_tcrypt"],[3,"crypt_params_integrity"],[3,"crypt_params_luks2"],[3,"crypt_active_device"],[3,"crypt_token_params_luks2_keyring"],[3,"crypt_token_handler"],[3,"crypt_params_reencrypt"],[3,"crypt_device"]]};
addSearchOptions(searchIndex);initSearch(searchIndex);